[{"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\index.js":"1","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\reportWebVitals.js":"2","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\App.js":"3","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\style.js":"4","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\store.js":"5","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\routers.jsx":"6","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\auth.js":"7","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\oder.js":"8","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\client\\dahsboard.jsx":"9","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\waiters\\dashboard.jsx":"10","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\chef\\dashboard.jsx":"11","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\admin\\dashboard.jsx":"12","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\actions.js":"13","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\tokenFunctions.js":"14","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\singIn\\index.js":"15","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\login\\index.js":"16","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addUsers\\userForm.jsx":"17","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\addMenuForm.jsx":"18","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\tablesForm.jsx":"19","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\singIn\\singin.jsx":"20","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\login\\login.jsx":"21","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\index.js":"22","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addUsers\\index.js":"23","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\index.js":"24","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\status\\index.js":"25","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\waiter\\index.js":"26","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\client\\index.js":"27","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\chef\\index.js":"28","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\admin\\index.js":"29","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\index.js":"30","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\tables\\index.js":"31","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\charge\\index.js":"32","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\order\\index.js":"33","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\daily\\index.js":"34","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\tables\\index.js":"35","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\chef\\dishes\\index.js":"36","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\ClientApi.js":"37","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\api_request.js":"38","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\api.js":"39","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\Buttons\\Buttons.jsx":"40","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\cards\\Cards.jsx":"41","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\animations\\loading.jsx":"42","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\animations\\blinking.jsx":"43","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\addMenu.jsx":"44","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addUsers\\addUsers.jsx":"45","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\tables.jsx":"46","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\status\\status.jsx":"47","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\waiter\\layout.jsx":"48","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\client\\clientLayout.jsx":"49","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\dishes.jsx":"50","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\chef\\layout.jsx":"51","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\order\\orders.jsx":"52","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\charge\\charge.jsx":"53","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\admin\\adminLayout.jsx":"54","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\tables\\tables.jsx":"55","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\daily\\daily.jsx":"56","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\tables\\tables.jsx":"57","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\chef\\dishes\\dishes.jsx":"58","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\Buttons\\style.js":"59","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\cards\\style.js":"60","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\animations\\styles.js":"61","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\tables\\style.js":"62","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\api_request.js":"63","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\styles.js":"64","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\charge\\api_request.js":"65","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\states.js":"66","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\viewTables.jsx":"67","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\dihesForm.jsx":"68","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\public_home\\public.jsx":"69","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\cards\\simpleCard.jsx":"70","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\footer\\footer.jsx":"71","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\public_home\\Schedule.jsx":"72"},{"size":539,"mtime":1613195290124,"results":"73","hashOfConfig":"74"},{"size":362,"mtime":1611638353069,"results":"75","hashOfConfig":"74"},{"size":344,"mtime":1643948730970,"results":"76","hashOfConfig":"74"},{"size":495,"mtime":1643948555898,"results":"77","hashOfConfig":"74"},{"size":309,"mtime":1613195037386,"results":"78","hashOfConfig":"74"},{"size":1951,"mtime":1643857363791,"results":"79","hashOfConfig":"74"},{"size":968,"mtime":1623965908473,"results":"80","hashOfConfig":"74"},{"size":552,"mtime":1613290533660,"results":"81","hashOfConfig":"74"},{"size":1068,"mtime":1613302193891,"results":"82","hashOfConfig":"74"},{"size":919,"mtime":1630719169349,"results":"83","hashOfConfig":"74"},{"size":956,"mtime":1623961378034,"results":"84","hashOfConfig":"74"},{"size":1676,"mtime":1624043556807,"results":"85","hashOfConfig":"74"},{"size":253,"mtime":1613209972929,"results":"86","hashOfConfig":"74"},{"size":542,"mtime":1613298408812,"results":"87","hashOfConfig":"74"},{"size":32,"mtime":1612994462044,"results":"88","hashOfConfig":"74"},{"size":31,"mtime":1611640044210,"results":"89","hashOfConfig":"74"},{"size":6154,"mtime":1630817153659,"results":"90","hashOfConfig":"74"},{"size":8819,"mtime":1630885463962,"results":"91","hashOfConfig":"74"},{"size":3261,"mtime":1630907066606,"results":"92","hashOfConfig":"74"},{"size":5581,"mtime":1630721176827,"results":"93","hashOfConfig":"74"},{"size":4985,"mtime":1643950360574,"results":"94","hashOfConfig":"74"},{"size":33,"mtime":1612581291327,"results":"95","hashOfConfig":"74"},{"size":34,"mtime":1612581226801,"results":"96","hashOfConfig":"74"},{"size":33,"mtime":1623961378242,"results":"97","hashOfConfig":"74"},{"size":32,"mtime":1612581374743,"results":"98","hashOfConfig":"74"},{"size":33,"mtime":1623961378082,"results":"99","hashOfConfig":"74"},{"size":38,"mtime":1611726379108,"results":"100","hashOfConfig":"74"},{"size":33,"mtime":1623961378060,"results":"101","hashOfConfig":"74"},{"size":37,"mtime":1623961378058,"results":"102","hashOfConfig":"74"},{"size":32,"mtime":1611796814353,"results":"103","hashOfConfig":"74"},{"size":32,"mtime":1611781853938,"results":"104","hashOfConfig":"74"},{"size":32,"mtime":1612325866032,"results":"105","hashOfConfig":"74"},{"size":32,"mtime":1612236290992,"results":"106","hashOfConfig":"74"},{"size":31,"mtime":1612488727423,"results":"107","hashOfConfig":"74"},{"size":32,"mtime":1612242521038,"results":"108","hashOfConfig":"74"},{"size":32,"mtime":1612499483519,"results":"109","hashOfConfig":"74"},{"size":261,"mtime":1613198639333,"results":"110","hashOfConfig":"74"},{"size":2785,"mtime":1630883796995,"results":"111","hashOfConfig":"74"},{"size":180,"mtime":1643943982283,"results":"112","hashOfConfig":"74"},{"size":528,"mtime":1612580840745,"results":"113","hashOfConfig":"74"},{"size":520,"mtime":1612994275245,"results":"114","hashOfConfig":"74"},{"size":590,"mtime":1613205911659,"results":"115","hashOfConfig":"74"},{"size":235,"mtime":1611725737852,"results":"116","hashOfConfig":"74"},{"size":1849,"mtime":1630885827188,"results":"117","hashOfConfig":"74"},{"size":2712,"mtime":1623961378213,"results":"118","hashOfConfig":"74"},{"size":2325,"mtime":1630906745795,"results":"119","hashOfConfig":"74"},{"size":1036,"mtime":1623961378241,"results":"120","hashOfConfig":"74"},{"size":2485,"mtime":1623961378106,"results":"121","hashOfConfig":"74"},{"size":1764,"mtime":1624039123722,"results":"122","hashOfConfig":"74"},{"size":8214,"mtime":1623961378337,"results":"123","hashOfConfig":"74"},{"size":1864,"mtime":1623961378077,"results":"124","hashOfConfig":"74"},{"size":5884,"mtime":1623961378356,"results":"125","hashOfConfig":"74"},{"size":4718,"mtime":1623961378444,"results":"126","hashOfConfig":"74"},{"size":1987,"mtime":1623961378053,"results":"127","hashOfConfig":"74"},{"size":8164,"mtime":1624306340849,"results":"128","hashOfConfig":"74"},{"size":2999,"mtime":1623961378476,"results":"129","hashOfConfig":"74"},{"size":3948,"mtime":1623961378492,"results":"130","hashOfConfig":"74"},{"size":6684,"mtime":1623961378317,"results":"131","hashOfConfig":"74"},{"size":904,"mtime":1612940453080,"results":"132","hashOfConfig":"74"},{"size":840,"mtime":1643949825945,"results":"133","hashOfConfig":"74"},{"size":265,"mtime":1611725579092,"results":"134","hashOfConfig":"74"},{"size":325,"mtime":1611796826528,"results":"135","hashOfConfig":"74"},{"size":2739,"mtime":1623961378334,"results":"136","hashOfConfig":"74"},{"size":1021,"mtime":1613207632917,"results":"137","hashOfConfig":"74"},{"size":663,"mtime":1623961378401,"results":"138","hashOfConfig":"74"},{"size":281,"mtime":1623961378110,"results":"139","hashOfConfig":"74"},{"size":1664,"mtime":1624049118312,"results":"140","hashOfConfig":"74"},{"size":2974,"mtime":1630884354407,"results":"141","hashOfConfig":"74"},{"size":3751,"mtime":1643949784831,"results":"142","hashOfConfig":"74"},{"size":191,"mtime":1611725065636,"results":"143","hashOfConfig":"74"},{"size":1442,"mtime":1643947006707,"results":"144","hashOfConfig":"74"},{"size":727,"mtime":1643944488224,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"iosqk0",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"148"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"148"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"148"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"148"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"148"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"148"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"148"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"148"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"148"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"148"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\index.js",[],["301","302"],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\reportWebVitals.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\App.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\style.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\store.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\routers.jsx",["303"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Login from \"./views/login\";\r\nimport SingIn from \"./views/singIn\";\r\nimport ClientDashboard from \"./components/dashboards/client/dahsboard\";\r\nimport WaiterDashboard from \"./components/dashboards/waiters/dashboard\";\r\nimport ChefDashboard from \"./components/dashboards/chef/dashboard\";\r\nimport AdminDashboard from \"./components/dashboards/admin/dashboard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Public_home from \"./views/public_home/public\";\r\n\r\nexport default function Routers() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path={\"/\"} exact={true}>\r\n          <Public_home />\r\n        </Route>\r\n        <Route path={\"/login\"} exact={true}>\r\n          <Login />\r\n        </Route>\r\n        <Route path={\"/singIn\"} exact={true}>\r\n          <SingIn />\r\n        </Route>\r\n        <PrivateRoute path={\"/dashboard\"}>\r\n          <Dashboard />\r\n        </PrivateRoute>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction PrivateRoute({ children, ...rest }) {\r\n  const isLoggedIn = useSelector((state) => state.authReducer.token);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isLoggedIn ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    ></Route>\r\n  );\r\n}\r\n\r\nfunction Dashboard() {\r\n  const rol = useSelector((state) => state.authReducer.rol);\r\n  console.log(rol.toLowerCase());\r\n  if (rol.toLowerCase() === \"cliente\") {\r\n    return <ClientDashboard />;\r\n  }\r\n  if (rol.toLowerCase() === \"administrador\") {\r\n    return <AdminDashboard />;\r\n  }\r\n  if (rol.toLowerCase() === \"cocinero\") {\r\n    return <ChefDashboard />;\r\n  }\r\n  if (rol.toLowerCase() === \"mesero\") {\r\n    return <WaiterDashboard />;\r\n  }\r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\auth.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\oder.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\client\\dahsboard.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\waiters\\dashboard.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\chef\\dashboard.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\admin\\dashboard.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\actions.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\tokenFunctions.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\singIn\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\login\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addUsers\\userForm.jsx",["304"],"import React, { useState, useEffect } from \"react\";\r\nimport { ItemCard } from \"../../../components/cards/Cards\";\r\nimport { Form, FormGroup, Label, Input, Row, Col, Alert } from \"reactstrap\";\r\nimport { PrimaryBtn, SecondaryBtn } from \"../../../components/Buttons/Buttons\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loading from \"../../../components/animations/loading\";\r\nimport Api from \"../../../utils/ClientApi\";\r\nexport default function UserForm() {\r\n  const history = useHistory();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [readOnly, setReadOnly] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [initialValues, setinitialValues] = useState({\r\n    nombre: \"\",\r\n    correo: \"\",\r\n    password: \"\",\r\n    rol: \"\",\r\n  });\r\n  const [done, setDone] = useState(false);\r\n  const goBack = () => history.goBack();\r\n  const formik = useFormik({\r\n    initialValues: initialValues,\r\n    validationSchema: yup.object(validationSchema()),\r\n    enableReinitialize: true,\r\n    onSubmit: (form) => {\r\n      if (isEdit) {\r\n        Api.put(`/api/usuario/${history.location.state.id}`, form).then((e) => {\r\n          setDone(true);\r\n        });\r\n      } else {\r\n        Api.post(`/api/usuario`, form).then((e) => {\r\n          setDone(true);\r\n        });\r\n      }\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    if (history.location.state) {\r\n      setLoading(true);\r\n      setIsEdit(true);\r\n      setReadOnly(true);\r\n      let userId = history.location.state.id;\r\n      Api.get(`api/usuario/${userId}`)\r\n        .then((e) => {\r\n          const { nombre, correo, rol } = e.data.data;\r\n          setinitialValues({\r\n            nombre: nombre,\r\n            correo: correo,\r\n            password: \"\",\r\n            rol: rol,\r\n          });\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n  if (done) {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <Alert color=\"info\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              Usuario Guardado Correctamente\r\n              <SecondaryBtn type=\"button\" onClick={goBack}>\r\n                Continuar\r\n              </SecondaryBtn>\r\n            </div>\r\n          </Alert>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n  return (\r\n    <ItemCard style={{ marginTop: \"15px\" }}>\r\n      {isEdit ? (\r\n        <Row>\r\n          <Col>\r\n            <div className=\"d-flex justify-content-end\">\r\n              <SecondaryBtn onClick={() => setReadOnly(false)}>\r\n                Editar\r\n              </SecondaryBtn>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <fieldset disabled={readOnly}>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label for=\"nombre\">Usuario</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  value={formik.values.nombre}\r\n                  invalid={formik.errors.nombre ? true : false}\r\n                  onChange={formik.handleChange}\r\n                  name=\"nombre\"\r\n                  id=\"nombre\"\r\n                  placeholder=\"\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label for=\"email\">Correo</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  value={formik.values.correo}\r\n                  invalid={formik.errors.correo ? true : false}\r\n                  onChange={formik.handleChange}\r\n                  name=\"correo\"\r\n                  id=\"email\"\r\n                  placeholder=\"ejemplo@email.com\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label for=\"password\">Contraseña</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  value={formik.values.password}\r\n                  invalid={formik.errors.password ? true : false}\r\n                  onChange={formik.handleChange}\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  placeholder=\"\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label for=\"Cargo\">Rol</Label>\r\n                {readOnly ? (\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={formik.values.rol}\r\n                    onChange={formik.handleChange}\r\n                    name=\"rol\"\r\n                    id=\"Cargo\"\r\n                    placeholder=\"\"\r\n                  />\r\n                ) : (\r\n                  <Input\r\n                    type=\"select\"\r\n                    invalid={formik.errors.rol ? true : false}\r\n                    onChange={formik.handleChange}\r\n                    name=\"rol\"\r\n                    id=\"Cargo\"\r\n                  >\r\n                    <option selected disabled>\r\n                      Eliga un Cargo\r\n                    </option>\r\n                    <option>Cocinero</option>\r\n                    <option>Mesero</option>\r\n                  </Input>\r\n                )}\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </fieldset>\r\n        <Row style={{ marginBlock: \"15px\" }}>\r\n          <Col xs={12} md={6} lg={4}>\r\n            <div class=\"d-flex justify-content-around\">\r\n              <PrimaryBtn disabled={readOnly} type=\"submit\">\r\n                {isEdit ? \"Guardar\" : \"Crear\"}\r\n              </PrimaryBtn>\r\n\r\n              <SecondaryBtn type=\"button\" onClick={goBack}>\r\n                Cancelar\r\n              </SecondaryBtn>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </ItemCard>\r\n  );\r\n}\r\n\r\nfunction validationSchema() {\r\n  return {\r\n    nombre: yup.string().required(true),\r\n    correo: yup.string().email().required(true),\r\n    rol: yup.string().ensure().required(true),\r\n    password: yup.string().required(true),\r\n  };\r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\addMenuForm.jsx",["305"],"import React, { useState, useEffect } from \"react\";\r\nimport { ItemCard } from \"../../../components/cards/Cards\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText,\r\n  UncontrolledAlert,\r\n} from \"reactstrap\";\r\nimport {\r\n  SecondaryBtn,\r\n  PrimaryBtn,\r\n  WaringBtn,\r\n} from \"../../../components/Buttons/Buttons\";\r\nimport { formInitData, AddItems, createMenu, editMenu } from \"./api_request\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Api from \"../../../utils/ClientApi\";\r\nimport Loading from \"../../../components/animations/loading\";\r\nimport DishesForm from \"./dihesForm\";\r\nexport default function AddMenuForm() {\r\n  const [modal, setModal] = useState(false);\r\n  const [platos, setPlatos] = useState([]);\r\n  const history = useHistory();\r\n  const [loading, setLoadig] = useState(true);\r\n  const [loadingDishes, setLoadigDishes] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [newDish, setNewDish] = useState(false);\r\n  const [dish, setDish] = useState({});\r\n  const [menuDishes, setMenuDishes] = useState([]);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [isEditDishes, setIsEditDishes] = useState(false);\r\n  const [readOnly, setReadOnly] = useState(false);\r\n  const [initialValues, setinitialValues] = useState({\r\n    nombre: \"\",\r\n    precio: 0,\r\n  });\r\n  const menuFormik = useFormik({\r\n    initialValues: initialValues,\r\n    validationSchema: yup.object(menuSchema()),\r\n    enableReinitialize: true,\r\n    onSubmit: (form) => {\r\n      if (isEdit) {\r\n        editMenu(form, menuDishes, history.location.state.id).then(() => {\r\n          setLoadig(true);\r\n        });\r\n      } else {\r\n        createMenu(form, menuDishes)\r\n          .then((e) => {\r\n            history.replace(\"/dashboard/menu\");\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n          });\r\n      }\r\n    },\r\n  });\r\n\r\n  const editdish = (plato) => {\r\n    setDish(plato);\r\n    setIsEditDishes(true);\r\n    toggle();\r\n  };\r\n  const toggle = () => setModal(!modal);\r\n  const addDishesToMenu = (data) => {\r\n    setMenuDishes(AddItems(menuDishes, data));\r\n  };\r\n  const deleteItem = (id) => {\r\n    let item = menuDishes.filter((plato) => plato._id !== id);\r\n    setMenuDishes(item);\r\n  };\r\n  useEffect(() => {\r\n    if (history.location.state) {\r\n      setIsEdit(true);\r\n      setReadOnly(true);\r\n      Api.get(`/api/menu/${history.location.state.id}`)\r\n        .then((data) => {\r\n          const { platos, nombre, precio } = data.data.data;\r\n          setinitialValues({ nombre: nombre, precio: precio });\r\n          setMenuDishes(platos);\r\n          setLoadig(false);\r\n        })\r\n        .catch(() => setError(true));\r\n    } else {\r\n      setLoadig(false);\r\n    }\r\n  }, [loading]);\r\n  useEffect(() => {\r\n    formInitData()\r\n      .then((e) => {\r\n        setPlatos(e.platos);\r\n        setNewDish(false);\r\n        setLoadigDishes(false);\r\n      })\r\n      .catch(() => {\r\n        setError(true);\r\n        setLoadigDishes(false);\r\n        setNewDish(false);\r\n      });\r\n  }, [newDish]);\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n  return (\r\n    <>\r\n      <ItemCard style={{ marginTop: \"15px\" }}>\r\n        {isEdit ? (\r\n          <Row>\r\n            <Col>\r\n              <div className=\"d-flex justify-content-end\">\r\n                <SecondaryBtn onClick={() => setReadOnly(false)}>\r\n                  Editar\r\n                </SecondaryBtn>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        ) : null}\r\n        <UncontrolledAlert\r\n          color=\"warning\"\r\n          isOpen={error}\r\n          toggle={() => setError(false)}\r\n        >\r\n          Ocurrio un error intentalo nuevamente\r\n        </UncontrolledAlert>\r\n        <Form onSubmit={menuFormik.handleSubmit}>\r\n          <fieldset disabled={readOnly}>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"nombre\">Nombre del menu</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    invalid={menuFormik.errors.nombre ? true : false}\r\n                    onChange={menuFormik.handleChange}\r\n                    value={menuFormik.values.nombre}\r\n                    name=\"nombre\"\r\n                    id=\"nombre\"\r\n                    placeholder=\"Ej: Desayuno, Almuerzo, etc.\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"precio\">Precio</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    step=\".01\"\r\n                    invalid={menuFormik.errors.precio ? true : false}\r\n                    onChange={menuFormik.handleChange}\r\n                    value={menuFormik.values.precio}\r\n                    name=\"precio\"\r\n                    id=\"precio\"\r\n                    placeholder=\"Precio\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </fieldset>\r\n          <Row>\r\n            <Col>\r\n              <ListGroup>\r\n                {menuDishes.map((dish) => (\r\n                  <ListGroupItem\r\n                    key={dish._id}\r\n                    style={{ backgroundColor: \"#fff0\" }}\r\n                  >\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                      <div>\r\n                        <ListGroupItemHeading>\r\n                          {dish.nombre}\r\n                        </ListGroupItemHeading>\r\n                        <ListGroupItemText>\r\n                          {dish.descripcion}\r\n                        </ListGroupItemText>\r\n                      </div>\r\n                      {!readOnly && (\r\n                        <WaringBtn\r\n                          type=\"button\"\r\n                          onClick={() => deleteItem(dish._id)}\r\n                        >\r\n                          Quitar\r\n                        </WaringBtn>\r\n                      )}\r\n                    </div>\r\n                  </ListGroupItem>\r\n                ))}\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginBlock: \"15px\" }}>\r\n            <Col>\r\n              {!isEdit && (\r\n                <PrimaryBtn\r\n                  type=\"submit\"\r\n                  disabled={menuDishes.length > 0 && !loading ? false : true}\r\n                >\r\n                  Crear\r\n                </PrimaryBtn>\r\n              )}\r\n              {!readOnly & isEdit ? (\r\n                <PrimaryBtn\r\n                  type=\"submit\"\r\n                  disabled={menuDishes.length > 0 && !loading ? false : true}\r\n                >\r\n                  Editar\r\n                </PrimaryBtn>\r\n              ) : null}\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </ItemCard>\r\n      {!readOnly && (\r\n        <>\r\n          <Row>\r\n            <Col xs={12} style={{ marginBlock: \"10px\" }}>\r\n              <SecondaryBtn\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  toggle();\r\n                  setIsEditDishes(false);\r\n                }}\r\n              >\r\n                Crear nuevo plato\r\n              </SecondaryBtn>{\" \"}\r\n              <DishesForm\r\n                modal={modal}\r\n                data={dish}\r\n                setModal={setModal}\r\n                toggle={toggle}\r\n                setNewDish={setNewDish}\r\n                setLoadig={setLoadigDishes}\r\n                loading={loadingDishes}\r\n                isedit={isEditDishes}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            {loading ? (\r\n              <div>cargando</div>\r\n            ) : (\r\n              platos.map((plato) => (\r\n                <Col\r\n                  key={plato._id}\r\n                  xs={6}\r\n                  md={6}\r\n                  lg={4}\r\n                  style={{ marginBlock: 10 }}\r\n                >\r\n                  <ItemCard>\r\n                    <h6>{plato.nombre}</h6>\r\n                    <p>{plato.descripcion ?? \"-\"}</p>\r\n                    <PrimaryBtn\r\n                      type=\"button\"\r\n                      onClick={() => addDishesToMenu(plato)}\r\n                    >\r\n                      Agregar\r\n                    </PrimaryBtn>{\" \"}\r\n                    <SecondaryBtn type=\"button\" onClick={() => editdish(plato)}>\r\n                      Editar\r\n                    </SecondaryBtn>\r\n                  </ItemCard>\r\n                </Col>\r\n              ))\r\n            )}\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction menuSchema() {\r\n  return {\r\n    nombre: yup.string().required(true),\r\n    precio: yup.number().required(true),\r\n  };\r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\tablesForm.jsx",["306"],"import React, { useState, useEffect } from \"react\";\r\nimport { ItemCard } from \"../../../components/cards/Cards\";\r\nimport { Form, FormGroup, Label, Input, Row, Col, Alert } from \"reactstrap\";\r\nimport { PrimaryBtn, SecondaryBtn } from \"../../../components/Buttons/Buttons\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loading from \"../../../components/animations/loading\";\r\nimport Api from \"../../../utils/ClientApi\";\r\nexport default function TablesForm() {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [done, setDone] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [initialValues, setinitialValues] = useState({\r\n    numero: \"\",\r\n  });\r\n  const goBack = () => history.goBack();\r\n  const formik = useFormik({\r\n    initialValues: initialValues,\r\n    validationSchema: yup.object(validationSchema()),\r\n    enableReinitialize: true,\r\n    onSubmit: (form) => {\r\n      setLoading(true);\r\n      if (isEdit) {\r\n        Api.put(`/api/mesa/${data._id}`, form)\r\n          .then(() => setLoading(false))\r\n          .then(() => setDone(true));\r\n      } else {\r\n        Api.post(\"/api/mesa\", form)\r\n          .then(() => setLoading(false))\r\n          .then(() => setDone(true));\r\n      }\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    if (history.location.state) {\r\n      setIsEdit(true);\r\n      const { numero, ...rest } = history.location.state.table;\r\n      setData({ numero, ...rest });\r\n      setinitialValues({ numero: numero });\r\n    }\r\n  }, []);\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n  if (done) {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <Alert color=\"info\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              Mesa fue {isEdit ? \"editada\" : \"creada\"}Correctamente\r\n              <SecondaryBtn type=\"button\" onClick={goBack}>\r\n                Continuar\r\n              </SecondaryBtn>\r\n            </div>\r\n          </Alert>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n  return (\r\n    <ItemCard style={{ marginTop: \"15px\" }}>\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <Row>\r\n          <Col>\r\n            <FormGroup>\r\n              <Label for=\"nombre\">Numero de mesa</Label>\r\n              <Input\r\n                type=\"number\"\r\n                invalid={formik.errors.numero ? true : false}\r\n                onChange={formik.handleChange}\r\n                name=\"numero\"\r\n                value={formik.values.numero}\r\n                id=\"nombre\"\r\n                placeholder=\"\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginBlock: \"15px\" }}>\r\n          <Col xs={12} md={6} lg={4}>\r\n            <div class=\"d-flex justify-content-around\">\r\n              <PrimaryBtn type=\"submit\">\r\n                {isEdit ? \"Editar\" : \"Crear\"}\r\n              </PrimaryBtn>\r\n              <SecondaryBtn type=\"button\" onClick={goBack}>\r\n                Cancelar\r\n              </SecondaryBtn>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </ItemCard>\r\n  );\r\n}\r\nfunction validationSchema() {\r\n  return {\r\n    numero: yup.number().required(true),\r\n  };\r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\singIn\\singin.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\login\\login.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addUsers\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\status\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\waiter\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\client\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\chef\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\admin\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\tables\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\charge\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\order\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\daily\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\tables\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\chef\\dishes\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\ClientApi.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\api_request.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\api.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\Buttons\\Buttons.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\cards\\Cards.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\animations\\loading.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\animations\\blinking.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\addMenu.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addUsers\\addUsers.jsx",["307"],"import React,{useState, useEffect} from 'react'\r\nimport {\r\n    Card, Table, CardText, CardBody,\r\n    CardTitle\r\n  } from 'reactstrap';\r\nimport {SecondaryBtn, WaringBtn, PrimaryBtn} from '../../../components/Buttons/Buttons';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Api from '../../../utils/ClientApi';\r\nexport default function AddUsers() {\r\n    const [users, setUsers] = useState([])\r\n    const history = useHistory()\r\n    \r\n    useEffect(() => {\r\n        Api.get('/api/usuario').then(e=>{\r\n            let data = e.data.data.filter(user => user.rol !==\"cliente\")\r\n            setUsers(data)\r\n        })\r\n       \r\n    }, [])\r\n\r\n    const usersForm=()=>{\r\n        history.push('/dashboard/usersForm')\r\n    }\r\n    const userData = (id) =>{\r\n        history.push('/dashboard/usersForm', {id: id})\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle tag=\"h5\">Usuarios</CardTitle>\r\n                    <CardText></CardText>\r\n                    <PrimaryBtn onClick= {usersForm}>\r\n                        Agregar nuevo \r\n                    </PrimaryBtn>\r\n                </CardBody>\r\n                <CardBody>\r\n                    <Table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Nombre</th>\r\n                                <th>Correo</th>\r\n                                <th>Cargo</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {users.map((user, index)=>(\r\n                                <tr key={user._id}>\r\n                                    <th scope=\"row\">{index+1}</th>\r\n                                    <td>{user.nombre}</td>\r\n                                    <td>{user.correo}</td>\r\n                                    <td>{user.rol}</td>\r\n                                    <td>\r\n                                        <SecondaryBtn onClick={()=>userData(user._id)}>\r\n                                            Ver\r\n                                        </SecondaryBtn>\r\n                                        -\r\n                                        {/* <WaringBtn>\r\n                                            Eliminar Menu\r\n                                        </WaringBtn> */}\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                            \r\n                        </tbody>\r\n                    </Table>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\tables.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\status\\status.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\waiter\\layout.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\client\\clientLayout.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\dishes.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\chef\\layout.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\order\\orders.jsx",["308","309"],"import React,{useState, useEffect} from 'react';\r\nimport {Row, Col} from 'reactstrap';\r\nimport {useSelector} from 'react-redux';\r\nimport {SecondaryBtn} from '../../../components/Buttons/Buttons';\r\nimport {ItemCard} from '../../../components/cards/Cards';\r\nimport {MenuContent} from '../dishes/styles';\r\nimport Api from '../../../utils/ClientApi';\r\nimport {URL} from '../../../utils/api';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {states} from '../../../utils/states';\r\nimport io from 'socket.io-client';\r\nconst connectSocketServer=()=>{\r\n    const socket = io(URL,{transports: ['websocket']});\r\n    return socket\r\n}\r\nexport default function Orders() {\r\n    const [pedido, setPedido] = useState([]);\r\n    const selector = useSelector(state=> state.orderReducer);\r\n    const history = useHistory();\r\n    const [allData, setAllData]= useState({});\r\n    const [orderReady,  setOrderready] = useState(false);\r\n    const [socket ] = useState(connectSocketServer())\r\n    const goTooBack =()=>history.push('/dashboard');\r\n\r\n    const getData=()=>{\r\n        Api.get(`/api/pedido/reserva/${selector.reserve}`).then(e=>{\r\n            let order= e.data.data\r\n            if (order.length>0) {\r\n                setPedido(order[order.length-1].pedidos);\r\n                setAllData(order[order.length-1]);\r\n                if (order[order.length-1].reserva.estado===states.preparado) {\r\n                    setOrderready(true)\r\n                }\r\n            }\r\n        })\r\n        .catch(()=>{\r\n            goTooBack()\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        socket.on('cocinero-mesero', (data) => {\r\n            getData()\r\n        });\r\n        \r\n    }, [allData])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                {orderReady?(\r\n                    <Col>\r\n                        <h3 className=\"text-center\">Tu orden esta ya esta Lista!</h3>\r\n                        <small className=\"text-center\">Estamos llevando tu plato al a mesa</small>\r\n                        \r\n                    </Col>\r\n                ):(\r\n                    <Col>\r\n                        <h3 className=\"text-center\">Tu orden esta en Proceso</h3>\r\n                        <small className=\"text-center\">Estamos llevando tu plato al a mesa</small>\r\n                    </Col>\r\n                )}\r\n               \r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <h3 className=\"text-center\">Tu Orden </h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} sm={12} md={9} lg={8}>\r\n                    <Row>\r\n                        {pedido.map((data)=>(\r\n                            <Col style={{marginBlock: '5px'}} key={data._id} xs={12} sm={12} md={6} lg={4}>\r\n                                <ItemCard>\r\n                                    <div className=\"d-flex w-100 justify-content-between align-items-center\">\r\n                                        <h5>{data.cantidad} {data.menu.nombre}</h5>\r\n                                        <small>${data.menu.precio} c/u</small>\r\n                                    </div>\r\n                                    <MenuContent className={'scroll'}>\r\n                                        {data.menu.platos.map(plato=>(\r\n                                            <div key={plato._id} >\r\n                                                <div className=\"d-flex w-100 justify-content-between\">\r\n                                                    <h6 className=\"mb-1\">{plato.nombre}</h6>\r\n\r\n                                                </div>\r\n                                                <p className=\"mb-1\">{plato.descripcion??''}</p>\r\n                                            </div>\r\n                                            \r\n                                        ))}\r\n                                    </MenuContent>\r\n                                    <div className=\"d-flex w-100 justify-content-between align-items-center\">\r\n                                        \r\n                                        <h4>$ {data.menu.precio*data.cantidad}</h4>\r\n                                    </div>\r\n                                </ItemCard>\r\n                            </Col>\r\n                        ))}\r\n                        {pedido.length>0?(\r\n                            <Col style={{marginBlock: '5px'}}  xs={12} sm={12} md={6} lg={4}>\r\n                                <ItemCard>\r\n                                    <div className=\"d-flex w-100 justify-content-between align-items-center\">\r\n                                        <h4>Total</h4>\r\n                                    </div>\r\n                                    <div className=\"d-flex w-100 justify-content-between align-items-center\">\r\n                                        \r\n                                        <h3>$ {allData.total} </h3>\r\n                                    </div>\r\n                                </ItemCard>\r\n                            </Col>\r\n                        ):(\r\n                            <ItemCard>\r\n                                <div className=\"d-flex w-100 justify-content-between align-items-center\">\r\n                                    <h4>Todavia no tienes un pedido</h4>\r\n                                </div>\r\n                                <div className=\"d-flex w-100 justify-content-between align-items-center\">\r\n                                    \r\n                                <SecondaryBtn onClick={()=>history.goBack()}>\r\n                                    Continuar\r\n                                </SecondaryBtn>\r\n                                </div>\r\n                            </ItemCard>\r\n                        )}   \r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n        \r\n    )\r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\charge\\charge.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\admin\\adminLayout.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\tables\\tables.jsx",["310","311"],"import React, {useState, useEffect,useRef} from 'react';\r\nimport {BtnCard, SimpleCard} from '../../../components/cards/Cards';\r\nimport {PrimaryBtn, SecondaryBtn} from '../../../components/Buttons/Buttons';\r\nimport {Row, Col, Button } from 'reactstrap';\r\nimport {CenterText, H2}from './style';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Api from '../../../utils/ClientApi';\r\nimport {getUserData} from '../../../utils/tokenFunctions';\r\nimport {useDispatch} from 'react-redux'\r\nimport {OrderActions} from '../../../redux/actions'\r\nimport Loading from '../../../components/animations/loading';\r\nimport {states} from '../../../utils/states';\r\nimport QrReader from 'react-qr-reader';\r\nexport default function Tables() {\r\n    const router = useHistory();\r\n    const [tables, setTables] = useState([]) ;\r\n    const [error, setError] = useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n    const userData= getUserData();\r\n    const dispatch = useDispatch();\r\n    const [reserved, setReserved] = useState(false);\r\n    const [result, setResult] = useState(null);\r\n    const [activeCamera, setActiveCamera] = useState(false);\r\n    const [cameraMode, setCameraMode] = useState(false);\r\n    const qrReader = useRef(null);\r\n    const refPrint=()=>{\r\n        console.log(qrReader.current)\r\n    }\r\n    const getTable =(id, num)=>{\r\n        setLoading(true)\r\n        Api.put(`/api/mesa/${id}`,{estado: false})\r\n        .then(e=>{\r\n            Api.post('/api/reserva',{\r\n                mesa: id,\r\n                usuario: userData.id\r\n            }).then(response=>{\r\n                dispatch({type: OrderActions.GET_TABLE, payload: { num: num, reserve: response.data.id}})\r\n                router.push('/dashboard/dishes')\r\n            })\r\n        }).catch(e=>{\r\n            setLoading(false)\r\n            setError(true)\r\n        })\r\n    }\r\n    const handleScan=(data)=>{\r\n        if (data) {\r\n\r\n            console.log(data)\r\n                try {\r\n                    const tableQr = JSON.parse(data) \r\n                    let getTable = tables.find(e=> e._id === tableQr._id)\r\n                    setResult(getTable)\r\n                    handleActiveCamera()\r\n                } catch (error) {\r\n                    \r\n                }  \r\n        }\r\n        \r\n    }\r\n\r\n    const handleError=(err)=>{\r\n        console.error(\"error\",err)\r\n    }\r\n    const handleActiveCamera =()=>{\r\n        setActiveCamera(!activeCamera);\r\n    }\r\n    const changeCamera =()=>{\r\n        setCameraMode(!cameraMode);\r\n    }\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        Api.get('/api/mesa')\r\n        .then(e=>{\r\n            setTables(e.data.data)\r\n            setError(false)\r\n            Api.get(`/api/reserva/usuario/${userData.id}`)\r\n            .then(response=>{\r\n                let userReserves= response.data.data\r\n                if (userReserves.length>0) {\r\n                    let lastReserveState = userReserves[userReserves.length - 1]\r\n                    if (lastReserveState.estado !== states.finalizado) {\r\n                        \r\n                        setReserved(true)\r\n                        dispatch({type: OrderActions.GET_TABLE, payload: { num: lastReserveState.mesa.numero, reserve: lastReserveState._id}})\r\n                    }\r\n                }\r\n                setLoading(false)\r\n            })\r\n        })\r\n        .catch((e)=>{\r\n            setError(true)\r\n        })\r\n    }, [error])\r\n    if (reserved) {\r\n        return(\r\n            <Row>\r\n                <Col style={{height: 300}} >\r\n                    <BtnCard onClick={()=> router.push('/dashboard/dishes')}>\r\n                        <CenterText>\r\n                            <H2> ya tienes reservado una Mesa</H2>\r\n                            <H2>Continuar</H2>\r\n                        </CenterText>\r\n                    </BtnCard>\r\n                </Col>\r\n            </Row>\r\n            \r\n        )\r\n    }\r\n    if (loading) {\r\n        return(\r\n           <Loading/>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n                \r\n                    \r\n                {activeCamera?(\r\n                    <div className=\"center-container\">\r\n                        <div style={{display: 'grid', marginBottom: 10}}>\r\n                            <QrReader\r\n                                facingMode={!cameraMode?\"environment\":\"user\"}\r\n                                // constraints={{facingMode: 'rear'}}\r\n                                // choosedeviceid={choosedevice}\r\n                                delay={1000}\r\n                                style={{height: 300, width: 300}}\r\n                                onError={(e)=>handleError(e)}\r\n                                onScan={(e)=>handleScan(e)}\r\n                            />\r\n                            <Button outline onClick={changeCamera} color=\"secondary\">Cambiar cámara</Button>\r\n                            {/* <Button outline onClick={refPrint} color=\"secondary\">ref</Button> */}\r\n                        </div>\r\n                        \r\n\r\n                    </div>\r\n                ) :null\r\n                }\r\n                {/* <p>{result}</p> */}\r\n                \r\n                {result?(\r\n                    <Row>\r\n                        <Col md={6} xs={12} lg={4} style={{height: '300px', marginBottom: 15}}>\r\n\r\n                            <SimpleCard>\r\n                                {/* <CenterText> */}\r\n                                    {result.estado?(\r\n                                        <>\r\n                                        <H2>Mesa {result.numero}</H2>\r\n                                        <PrimaryBtn disabled={!result.estado} onClick={()=>getTable(result._id, result.numero)}>Elegir Mesa</PrimaryBtn>\r\n                                        {'   '}<SecondaryBtn onClick={handleActiveCamera}>{!activeCamera?'Elegir otra': 'Apagar camara'}</SecondaryBtn>\r\n                                        </>\r\n                                    ):(\r\n                                        <>\r\n                                            <H2>Mesa {result.numero}</H2>\r\n                                            <H2>Esta mesa esta Ocupada </H2>\r\n                                            <SecondaryBtn onClick={handleActiveCamera}>{!activeCamera?'Elegir otra': 'Apagar camara'}</SecondaryBtn>\r\n                                        </>\r\n                                    )}\r\n                                    \r\n                                {/* </CenterText> */}\r\n                            </SimpleCard>\r\n                        </Col>\r\n                    </Row>\r\n                ):null}\r\n                {!result?(\r\n                    <BtnCard  onClick={handleActiveCamera} style={{marginTop: 20}}>\r\n                        {activeCamera?'Apagar cámara':'Escanear código Qr'}     \r\n                    </BtnCard>\r\n                ):null\r\n\r\n                }\r\n                    \r\n                {/* <Row style={{paddingBlock: '20px'}}>\r\n                    <Col>\r\n                        <h1>Elige un lugar para empezar... </h1>\r\n                    </Col>\r\n                </Row> */}\r\n                {/* <Row>\r\n                    {tables.map(table=>(\r\n                        <Col key={table._id}  md={6} xs={12} lg={4} style={{height: '300px', marginBottom: 15}}>\r\n                            <BtnCard disabled={!table.estado} onClick={()=>getTable(table._id, table.numero)}>\r\n                                <CenterText>\r\n                                    {table.estado?(\r\n                                        <H2>Mesa {table.numero}</H2>\r\n                                    ):(\r\n                                        <>\r\n                                            <H2>Mesa {table.numero}</H2>\r\n                                            <H2>ocupado</H2>\r\n                                        </>\r\n                                    )}\r\n                                    \r\n                                </CenterText>\r\n                            </BtnCard>\r\n                        </Col>\r\n                    ))}\r\n                </Row> */}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\daily\\daily.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\tables\\tables.jsx",["312","313"],"import React, {useEffect, useState} from 'react';\r\nimport {Col, Row, CardTitle,CardSubtitle,CardText, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport {ItemCard} from '../../../components/cards/Cards';\r\nimport {SecondaryBtn, PrimaryBtn} from '../../../components/Buttons/Buttons';\r\nimport Loading from '../../../components/animations/loading';\r\nimport Api from '../../../utils/ClientApi';\r\nimport {URL} from '../../../utils/api';\r\nimport io from 'socket.io-client';\r\nconst connectSocketServer=()=>{\r\n    const socket = io(URL,{transports: ['websocket']});\r\n    return socket\r\n}\r\nexport default function Tables() {\r\n    const [loading, setLoading] = useState(false);\r\n    const [orders, setOrders] = useState([]);\r\n    const [deliveData, setDeliveData] = useState(null);\r\n    const [modal, setModal] = useState(false);\r\n    const [socket ] = useState(connectSocketServer());\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const deliver=(data) =>{\r\n        setDeliveData(data)\r\n        setModal(true)\r\n    }\r\n\r\n    const submit=()=>{\r\n        console.log(\"uwu\")\r\n        Api.put(`/api/reserva/${deliveData?.reserva?._id}`,{estado: 'entregado'}).then(e=>{\r\n            setModal(false)\r\n            setLoading(true)\r\n        }).catch(()=>{\r\n            setModal(false)\r\n        })\r\n    }\r\n    const getOrders=()=>{\r\n        Api.get('/api/pedido').then(e=>{\r\n            let data= e.data.data.filter( e=> e.reserva.estado ===\"preparado\" )\r\n            setOrders(data)\r\n            setLoading(false)\r\n        })\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getOrders()\r\n    }, [loading])\r\n    useEffect(() => {\r\n        socket.on('cocinero-mesero', (data) => {\r\n            getOrders()\r\n        })\r\n    }, [orders])\r\n\r\n\r\n\r\n    if (loading) {\r\n        return <Loading/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row style={{marginTop: '15px'}}>\r\n                {orders.map(order=>(\r\n                    <Col key={order._id} md={4} style={{height: '300px'}}>\r\n                        <ItemCard>\r\n                            <div style={{padding: '20px'}}>\r\n                                <CardTitle tag=\"h5\">Mesa {order.reserva.mesa.numero}</CardTitle>\r\n                                \r\n                                <CardText className=\"scroll\" style={{height:70}}>\r\n                                    {order.pedidos.map(dishes=>(\r\n                                        <li key={dishes._id}><b>{dishes.cantidad}</b> {dishes.menu.nombre}</li>\r\n                                    ))}\r\n                                    \r\n                                </CardText>\r\n                                {/* <CardText>Hora de pedido: <b>{order.reserva.fecha}</b></CardText> */}\r\n                            </div>\r\n                            <SecondaryBtn onClick={()=>deliver(order)}>\r\n                                Entregar  \r\n                            </SecondaryBtn>\r\n                        </ItemCard>\r\n                    </Col>\r\n                ))}\r\n                {!orders.length>0?(\r\n                    <Col>\r\n                        <h1>Sin mesas por despachar </h1>\r\n                    </Col>\r\n                    \r\n                ):null}\r\n                <DeliverModal submit={submit} data={deliveData} modal={modal} toggle={toggle}/>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst DeliverModal = ({submit, data, modal, toggle}) =>(\r\n    \r\n    <Modal isOpen={modal} toggle={toggle} >\r\n        <ModalHeader toggle={toggle}> Mesa {data?.reserva?.mesa?.numero}</ModalHeader>\r\n        <ModalBody>\r\n            <ItemCard>\r\n                <CardText>Entregar plato a mesa  ?</CardText>\r\n            </ItemCard>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n            <PrimaryBtn onClick={submit}>\r\n                 Entregar \r\n            </PrimaryBtn>\r\n            <SecondaryBtn onClick={toggle}>\r\n                Cancelar\r\n            </SecondaryBtn>\r\n        </ModalFooter>\r\n    </Modal>\r\n)\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\chef\\dishes\\dishes.jsx",["314","315","316","317"],"import React, {useState, useEffect} from 'react'\r\nimport {Col, Row, CardTitle,CardSubtitle,CardText} from 'reactstrap';\r\nimport {SecondaryBtn, WaringBtn} from '../../../components/Buttons/Buttons';\r\nimport {ItemCard} from '../../../components/cards/Cards';\r\nimport Api from '../../../utils/ClientApi';\r\nimport Loading from '../../../components/animations/loading';\r\nimport {URL} from '../../../utils/api';\r\nimport io from 'socket.io-client';\r\nconst connectSocketServer=()=>{\r\n    const socket = io(URL,{transports: ['websocket']});\r\n    return socket\r\n}\r\n\r\nexport default function Dishes() {\r\n    const [loading, setLoading] = useState(false);\r\n    const [menus, setMenus] = useState([]);\r\n    const [orders, setOrders] = useState([]);\r\n    const [prepareDish, setPrepareDish] = useState(null);\r\n    const [ socket ] = useState(connectSocketServer());\r\n    const submit = () =>{\r\n        Api.put(`/api/reserva/${prepareDish.reserva._id}`, {estado: 'preparado'}).then(()=>{\r\n            setPrepareDish(null);\r\n            setLoading(true)\r\n            socket.emit('cocinero-mesero');\r\n        })\r\n    }\r\n    const getPdidos=()=>{\r\n        Api.get('/api/pedido').then(e=>{\r\n            \r\n            let data = e.data.data.filter(order=> order.reserva.estado === \"pedido\")\r\n            let currentDish=data[0]\r\n            setLoading(false)\r\n            setOrders(data)\r\n            setPrepareDish(currentDish)\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        getPdidos()\r\n    },[loading])\r\n    useEffect(()=>{\r\n        Api.get('/api/menu').then(e=>{\r\n            setMenus(e.data.data);\r\n        })\r\n    },[])\r\n    useEffect(() => {\r\n        socket.on('cliente-cocinero', (data) => {\r\n            getPdidos()\r\n        });\r\n        \r\n    }, [orders])\r\n    if (loading) {\r\n        return <Loading/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row style={{marginTop: '10px'}}>\r\n                <Col xs = {12} lg={8}>\r\n                    <ItemCard className='d-flex justify-content-center align-items-center scroll' style={{height: '60vh', overflowY: 'scroll'}}>\r\n                        {prepareDish?(\r\n                            <div style={{padding: '20px'}}>\r\n                                <CardTitle tag=\"h5\">Mesa {prepareDish.reserva.mesa.numero}</CardTitle>\r\n                                <div>\r\n                                    <ul className=\"list-group\">\r\n                                        {prepareDish.pedidos.map(e=>(\r\n                                            <li key={e._id} className=\"list-group-item\" style={{backgroundColor: '#fff0'}}>\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    \r\n                                                    <b>{e.cantidad}</b> \r\n                                                    <div>\r\n                                                        {e.menu.nombre}\r\n                                                    </div> \r\n                                                </div>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                                {/* <CardText>Tiempo de espera: <b>00:05</b></CardText> */}\r\n                                <SecondaryBtn style={{fontSize: '30px', width: '100%'}} onClick={submit}>\r\n                                    Plato preparado\r\n                                </SecondaryBtn>\r\n                            </div>\r\n                        ):(\r\n                            <h1>No hay platos por preparar</h1>\r\n                        )\r\n\r\n\r\n                        }\r\n                        \r\n\r\n                        \r\n                    </ItemCard>\r\n                </Col>\r\n                <Col xs = {12} lg={4}>\r\n                    <ItemCard className=\"scroll\"  style={{height: '60vh', overflow: 'hidden', overflowY: 'scroll'}} >\r\n                        <div>\r\n                            <h5>Numero de platos pedidos</h5>\r\n                        </div>\r\n                        <ul className=\"list-group\">\r\n                            {orders.map(order=>(\r\n                                <div key={order._id}>\r\n                                    <p> mesa {order.reserva.mesa.numero}</p>\r\n                                    {\r\n                                        order.pedidos.map(pedido=>(\r\n                                            <li key={pedido._id} className=\"list-group-item\">\r\n                                                \r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <div>\r\n                                                        {pedido.menu.nombre}\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <b>{pedido.cantidad}</b>\r\n                                                    </div>  \r\n                                                </div>\r\n                                            </li>\r\n                                        ))\r\n                                    }\r\n                                    \r\n                                </div>\r\n                                \r\n                               \r\n                            ))}\r\n                           \r\n                        </ul>\r\n                        \r\n                        \r\n                    </ItemCard>\r\n                </Col>\r\n            </Row>\r\n            <Row  style={{marginTop: '10px'}}>\r\n                <h4>Menu</h4>\r\n            </Row>\r\n            <Row style={{marginTop: '10px'}}>\r\n                {menus.map(data=>(\r\n                    <Col key={data._id}>\r\n                        <ItemCard>\r\n                            <CardTitle tag=\"h6\">{data.nombre}</CardTitle>\r\n                            <div>\r\n                                <ul className=\"list-group\">\r\n                                    {data.platos.map(plato=>(\r\n                                        <li key={plato._id} className=\"list-group-item\" style={{backgroundColor: '#fff0'}}>\r\n                                            {plato.nombre}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        </ItemCard>\r\n                    </Col>\r\n                ))}\r\n                \r\n                \r\n            </Row>\r\n            \r\n        </>\r\n        \r\n    )\r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\Buttons\\style.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\cards\\style.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\animations\\styles.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\tables\\style.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\api_request.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\styles.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\charge\\api_request.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\states.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\viewTables.jsx",["318","319"],"import React,{useState, useEffect} from 'react';\r\nimport {PrimaryBtn} from './../../../components/Buttons/Buttons'\r\nimport {useLocation, useHistory} from 'react-router-dom';\r\nimport QRCode from 'qrcode.react';\r\nimport {\r\n    Card, CardText, CardBody,\r\n    CardTitle, CardSubtitle, Button\r\n  } from 'reactstrap';\r\nexport default function ViewTables() {\r\n    const data = useLocation();\r\n    const history = useHistory();\r\n    console.log(data.state)\r\n    if (data.state) {\r\n        const {numero, estado} = data.state\r\n        return (\r\n            <div  className=\"center-container\">\r\n                <Card>\r\n                    <div style={{marginTop: 20}} className=\"center-container\">\r\n                    <QRCode size={400} imageSettings={{src:`https://via.placeholder.com/150/FFFFFF/000000?text=M${numero}`}} value={JSON.stringify(data.state)} />\r\n                    </div>\r\n                    <CardBody>\r\n                    <CardTitle tag=\"h5\">Mesa N: {numero}</CardTitle>\r\n                    <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{estado?\"Disponible\": \"ocupado\"}</CardSubtitle>\r\n                    <CardText>Este código Qr contiene la informcion de la mesa que permite al cliente tomar la mesa para su pedido</CardText>\r\n                    <Button onClick={()=>history.goBack()}>Volver</Button>\r\n                    </CardBody>\r\n                </Card>\r\n                \r\n            </div>\r\n        )    \r\n    }\r\n    return(\r\n        <div className=\"center-container\">\r\n            <PrimaryBtn onClick={()=>history.goBack()}>\r\n                Seleciona una mesa\r\n            </PrimaryBtn>\r\n            \r\n        </div>\r\n    )\r\n    \r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\dihesForm.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\public_home\\public.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\cards\\simpleCard.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\footer\\footer.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\public_home\\Schedule.jsx",[],{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","replacedBy":"323"},{"ruleId":"324","severity":1,"message":"325","line":22,"column":11,"nodeType":"326","messageId":"327","endLine":22,"endColumn":26},{"ruleId":"328","severity":1,"message":"329","line":60,"column":6,"nodeType":"330","endLine":60,"endColumn":8,"suggestions":"331"},{"ruleId":"328","severity":1,"message":"329","line":94,"column":6,"nodeType":"330","endLine":94,"endColumn":15,"suggestions":"332"},{"ruleId":"328","severity":1,"message":"329","line":44,"column":6,"nodeType":"330","endLine":44,"endColumn":8,"suggestions":"333"},{"ruleId":"334","severity":1,"message":"335","line":6,"column":23,"nodeType":"336","messageId":"337","endLine":6,"endColumn":32},{"ruleId":"328","severity":1,"message":"338","line":45,"column":8,"nodeType":"330","endLine":45,"endColumn":17,"suggestions":"339"},{"ruleId":"328","severity":1,"message":"340","line":49,"column":8,"nodeType":"330","endLine":49,"endColumn":10,"suggestions":"341"},{"ruleId":"334","severity":1,"message":"342","line":26,"column":11,"nodeType":"336","messageId":"337","endLine":26,"endColumn":19},{"ruleId":"328","severity":1,"message":"343","line":93,"column":8,"nodeType":"330","endLine":93,"endColumn":15,"suggestions":"344"},{"ruleId":"334","severity":1,"message":"345","line":2,"column":29,"nodeType":"336","messageId":"337","endLine":2,"endColumn":41},{"ruleId":"328","severity":1,"message":"346","line":50,"column":8,"nodeType":"330","endLine":50,"endColumn":16,"suggestions":"347"},{"ruleId":"334","severity":1,"message":"345","line":2,"column":29,"nodeType":"336","messageId":"337","endLine":2,"endColumn":41},{"ruleId":"334","severity":1,"message":"348","line":2,"column":42,"nodeType":"336","messageId":"337","endLine":2,"endColumn":50},{"ruleId":"334","severity":1,"message":"335","line":3,"column":23,"nodeType":"336","messageId":"337","endLine":3,"endColumn":32},{"ruleId":"328","severity":1,"message":"346","line":50,"column":8,"nodeType":"330","endLine":50,"endColumn":16,"suggestions":"349"},{"ruleId":"334","severity":1,"message":"350","line":1,"column":15,"nodeType":"336","messageId":"337","endLine":1,"endColumn":23},{"ruleId":"334","severity":1,"message":"351","line":1,"column":25,"nodeType":"336","messageId":"337","endLine":1,"endColumn":34},"no-native-reassign",["352"],"no-negated-in-lhs",["353"],"react/jsx-pascal-case","Imported JSX component Public_home must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history.location.state'. Either include it or remove the dependency array.","ArrayExpression",["354"],["355"],["356"],"no-unused-vars","'WaringBtn' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getData' and 'socket'. Either include them or remove the dependency array.",["357"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["358"],"'refPrint' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userData.id'. Either include them or remove the dependency array.",["359"],"'CardSubtitle' is defined but never used.","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["360"],"'CardText' is defined but never used.",["361"],"'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"362","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"373","fix":"375"},"Update the dependencies array to be: [history.location.state]",{"range":"376","text":"377"},"Update the dependencies array to be: [history.location.state, loading]",{"range":"378","text":"379"},{"range":"380","text":"377"},"Update the dependencies array to be: [allData, getData, socket]",{"range":"381","text":"382"},"Update the dependencies array to be: [getData]",{"range":"383","text":"384"},"Update the dependencies array to be: [dispatch, error, userData.id]",{"range":"385","text":"386"},"Update the dependencies array to be: [orders, socket]",{"range":"387","text":"388"},{"range":"389","text":"388"},[1955,1957],"[history.location.state]",[2870,2879],"[history.location.state, loading]",[1623,1625],[1665,1674],"[allData, getData, socket]",[1728,1730],"[getData]",[3418,3425],"[dispatch, error, userData.id]",[1726,1734],"[orders, socket]",[1738,1746]]