[{"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\index.js":"1","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\reportWebVitals.js":"2","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\App.js":"3","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\style.js":"4","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\store.js":"5","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\routers.jsx":"6","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\auth.js":"7","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\oder.js":"8","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\client\\dahsboard.jsx":"9","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\waiters\\dashboard.jsx":"10","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\chef\\dashboard.jsx":"11","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\admin\\dashboard.jsx":"12","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\actions.js":"13","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\tokenFunctions.js":"14","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\singIn\\index.js":"15","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\login\\index.js":"16","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addUsers\\userForm.jsx":"17","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\addMenuForm.jsx":"18","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\tablesForm.jsx":"19","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\singIn\\singin.jsx":"20","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\login\\login.jsx":"21","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\index.js":"22","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addUsers\\index.js":"23","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\index.js":"24","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\status\\index.js":"25","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\waiter\\index.js":"26","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\client\\index.js":"27","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\chef\\index.js":"28","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\admin\\index.js":"29","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\index.js":"30","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\tables\\index.js":"31","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\charge\\index.js":"32","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\order\\index.js":"33","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\daily\\index.js":"34","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\tables\\index.js":"35","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\chef\\dishes\\index.js":"36","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\ClientApi.js":"37","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\api_request.js":"38","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\api.js":"39","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\Buttons\\Buttons.jsx":"40","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\cards\\Cards.jsx":"41","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\animations\\loading.jsx":"42","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\animations\\blinking.jsx":"43","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\addMenu.jsx":"44","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addUsers\\addUsers.jsx":"45","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\tables.jsx":"46","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\status\\status.jsx":"47","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\waiter\\layout.jsx":"48","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\client\\clientLayout.jsx":"49","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\dishes.jsx":"50","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\chef\\layout.jsx":"51","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\order\\orders.jsx":"52","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\charge\\charge.jsx":"53","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\admin\\adminLayout.jsx":"54","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\tables\\tables.jsx":"55","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\daily\\daily.jsx":"56","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\tables\\tables.jsx":"57","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\chef\\dishes\\dishes.jsx":"58","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\Buttons\\style.js":"59","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\cards\\style.js":"60","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\animations\\styles.js":"61","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\tables\\style.js":"62","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\api_request.js":"63","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\styles.js":"64","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\charge\\api_request.js":"65","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\states.js":"66","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\viewTables.jsx":"67","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\dihesForm.jsx":"68","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\public_home\\public.jsx":"69","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\cards\\simpleCard.jsx":"70","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\footer\\footer.jsx":"71","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\public_home\\Schedule.jsx":"72","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\addImage.jsx":"73","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\alert\\Alert.jsx":"74","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\context\\SocketContext.jsx":"75","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\context\\useSocket.jsx":"76"},{"size":539,"mtime":1613195290124,"results":"77","hashOfConfig":"78"},{"size":362,"mtime":1611638353069,"results":"79","hashOfConfig":"78"},{"size":456,"mtime":1644294919368,"results":"80","hashOfConfig":"78"},{"size":501,"mtime":1645141041703,"results":"81","hashOfConfig":"78"},{"size":309,"mtime":1613195037386,"results":"82","hashOfConfig":"78"},{"size":2132,"mtime":1645144292385,"results":"83","hashOfConfig":"78"},{"size":968,"mtime":1623965908473,"results":"84","hashOfConfig":"78"},{"size":552,"mtime":1613290533660,"results":"85","hashOfConfig":"78"},{"size":1068,"mtime":1613302193891,"results":"86","hashOfConfig":"78"},{"size":919,"mtime":1630719169349,"results":"87","hashOfConfig":"78"},{"size":956,"mtime":1623961378034,"results":"88","hashOfConfig":"78"},{"size":1676,"mtime":1624043556807,"results":"89","hashOfConfig":"78"},{"size":253,"mtime":1613209972929,"results":"90","hashOfConfig":"78"},{"size":542,"mtime":1613298408812,"results":"91","hashOfConfig":"78"},{"size":32,"mtime":1612994462044,"results":"92","hashOfConfig":"78"},{"size":31,"mtime":1611640044210,"results":"93","hashOfConfig":"78"},{"size":6154,"mtime":1630817153659,"results":"94","hashOfConfig":"78"},{"size":11589,"mtime":1644296596202,"results":"95","hashOfConfig":"78"},{"size":3270,"mtime":1644296927421,"results":"96","hashOfConfig":"78"},{"size":5989,"mtime":1644424297456,"results":"97","hashOfConfig":"78"},{"size":5577,"mtime":1644424356050,"results":"98","hashOfConfig":"78"},{"size":33,"mtime":1612581291327,"results":"99","hashOfConfig":"78"},{"size":34,"mtime":1612581226801,"results":"100","hashOfConfig":"78"},{"size":33,"mtime":1623961378242,"results":"101","hashOfConfig":"78"},{"size":32,"mtime":1612581374743,"results":"102","hashOfConfig":"78"},{"size":33,"mtime":1623961378082,"results":"103","hashOfConfig":"78"},{"size":38,"mtime":1611726379108,"results":"104","hashOfConfig":"78"},{"size":33,"mtime":1623961378060,"results":"105","hashOfConfig":"78"},{"size":37,"mtime":1623961378058,"results":"106","hashOfConfig":"78"},{"size":32,"mtime":1611796814353,"results":"107","hashOfConfig":"78"},{"size":32,"mtime":1611781853938,"results":"108","hashOfConfig":"78"},{"size":32,"mtime":1612325866032,"results":"109","hashOfConfig":"78"},{"size":32,"mtime":1612236290992,"results":"110","hashOfConfig":"78"},{"size":31,"mtime":1612488727423,"results":"111","hashOfConfig":"78"},{"size":32,"mtime":1612242521038,"results":"112","hashOfConfig":"78"},{"size":32,"mtime":1612499483519,"results":"113","hashOfConfig":"78"},{"size":247,"mtime":1643973723773,"results":"114","hashOfConfig":"78"},{"size":3130,"mtime":1643977149836,"results":"115","hashOfConfig":"78"},{"size":180,"mtime":1643943982283,"results":"116","hashOfConfig":"78"},{"size":552,"mtime":1644117376667,"results":"117","hashOfConfig":"78"},{"size":520,"mtime":1612994275245,"results":"118","hashOfConfig":"78"},{"size":590,"mtime":1613205911659,"results":"119","hashOfConfig":"78"},{"size":235,"mtime":1611725737852,"results":"120","hashOfConfig":"78"},{"size":3371,"mtime":1644115750349,"results":"121","hashOfConfig":"78"},{"size":2107,"mtime":1644130755194,"results":"122","hashOfConfig":"78"},{"size":3453,"mtime":1644296876759,"results":"123","hashOfConfig":"78"},{"size":1938,"mtime":1645144116757,"results":"124","hashOfConfig":"78"},{"size":2187,"mtime":1645144579469,"results":"125","hashOfConfig":"78"},{"size":1921,"mtime":1645144554435,"results":"126","hashOfConfig":"78"},{"size":7920,"mtime":1645144885828,"results":"127","hashOfConfig":"78"},{"size":2000,"mtime":1645144563145,"results":"128","hashOfConfig":"78"},{"size":6027,"mtime":1645146127957,"results":"129","hashOfConfig":"78"},{"size":4062,"mtime":1645146974746,"results":"130","hashOfConfig":"78"},{"size":2312,"mtime":1645144542019,"results":"131","hashOfConfig":"78"},{"size":7346,"mtime":1644134415986,"results":"132","hashOfConfig":"78"},{"size":2999,"mtime":1623961378476,"results":"133","hashOfConfig":"78"},{"size":3432,"mtime":1645146872950,"results":"134","hashOfConfig":"78"},{"size":6209,"mtime":1645146616846,"results":"135","hashOfConfig":"78"},{"size":1172,"mtime":1645144955201,"results":"136","hashOfConfig":"78"},{"size":960,"mtime":1645146324178,"results":"137","hashOfConfig":"78"},{"size":265,"mtime":1611725579092,"results":"138","hashOfConfig":"78"},{"size":325,"mtime":1611796826528,"results":"139","hashOfConfig":"78"},{"size":2739,"mtime":1623961378334,"results":"140","hashOfConfig":"78"},{"size":1016,"mtime":1644876569137,"results":"141","hashOfConfig":"78"},{"size":663,"mtime":1623961378401,"results":"142","hashOfConfig":"78"},{"size":281,"mtime":1623961378110,"results":"143","hashOfConfig":"78"},{"size":2605,"mtime":1644297190655,"results":"144","hashOfConfig":"78"},{"size":2952,"mtime":1643975856659,"results":"145","hashOfConfig":"78"},{"size":4320,"mtime":1644425043417,"results":"146","hashOfConfig":"78"},{"size":191,"mtime":1611725065636,"results":"147","hashOfConfig":"78"},{"size":1114,"mtime":1644291185187,"results":"148","hashOfConfig":"78"},{"size":727,"mtime":1645147211176,"results":"149","hashOfConfig":"78"},{"size":3119,"mtime":1643978336100,"results":"150","hashOfConfig":"78"},{"size":618,"mtime":1644115349934,"results":"151","hashOfConfig":"78"},{"size":482,"mtime":1644387820431,"results":"152","hashOfConfig":"78"},{"size":632,"mtime":1644296361172,"results":"153","hashOfConfig":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"iosqk0",{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"156"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"156"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"156"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"156"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"156"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\index.js",[],["312","313"],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\reportWebVitals.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\App.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\style.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\store.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\routers.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\auth.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\oder.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\client\\dahsboard.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\waiters\\dashboard.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\chef\\dashboard.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\admin\\dashboard.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\actions.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\tokenFunctions.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\singIn\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\login\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addUsers\\userForm.jsx",["314"],"import React, { useState, useEffect } from \"react\";\r\nimport { ItemCard } from \"../../../components/cards/Cards\";\r\nimport { Form, FormGroup, Label, Input, Row, Col, Alert } from \"reactstrap\";\r\nimport { PrimaryBtn, SecondaryBtn } from \"../../../components/Buttons/Buttons\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loading from \"../../../components/animations/loading\";\r\nimport Api from \"../../../utils/ClientApi\";\r\nexport default function UserForm() {\r\n  const history = useHistory();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [readOnly, setReadOnly] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [initialValues, setinitialValues] = useState({\r\n    nombre: \"\",\r\n    correo: \"\",\r\n    password: \"\",\r\n    rol: \"\",\r\n  });\r\n  const [done, setDone] = useState(false);\r\n  const goBack = () => history.goBack();\r\n  const formik = useFormik({\r\n    initialValues: initialValues,\r\n    validationSchema: yup.object(validationSchema()),\r\n    enableReinitialize: true,\r\n    onSubmit: (form) => {\r\n      if (isEdit) {\r\n        Api.put(`/api/usuario/${history.location.state.id}`, form).then((e) => {\r\n          setDone(true);\r\n        });\r\n      } else {\r\n        Api.post(`/api/usuario`, form).then((e) => {\r\n          setDone(true);\r\n        });\r\n      }\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    if (history.location.state) {\r\n      setLoading(true);\r\n      setIsEdit(true);\r\n      setReadOnly(true);\r\n      let userId = history.location.state.id;\r\n      Api.get(`api/usuario/${userId}`)\r\n        .then((e) => {\r\n          const { nombre, correo, rol } = e.data.data;\r\n          setinitialValues({\r\n            nombre: nombre,\r\n            correo: correo,\r\n            password: \"\",\r\n            rol: rol,\r\n          });\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n  if (done) {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <Alert color=\"info\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              Usuario Guardado Correctamente\r\n              <SecondaryBtn type=\"button\" onClick={goBack}>\r\n                Continuar\r\n              </SecondaryBtn>\r\n            </div>\r\n          </Alert>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n  return (\r\n    <ItemCard style={{ marginTop: \"15px\" }}>\r\n      {isEdit ? (\r\n        <Row>\r\n          <Col>\r\n            <div className=\"d-flex justify-content-end\">\r\n              <SecondaryBtn onClick={() => setReadOnly(false)}>\r\n                Editar\r\n              </SecondaryBtn>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <fieldset disabled={readOnly}>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label for=\"nombre\">Usuario</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  value={formik.values.nombre}\r\n                  invalid={formik.errors.nombre ? true : false}\r\n                  onChange={formik.handleChange}\r\n                  name=\"nombre\"\r\n                  id=\"nombre\"\r\n                  placeholder=\"\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label for=\"email\">Correo</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  value={formik.values.correo}\r\n                  invalid={formik.errors.correo ? true : false}\r\n                  onChange={formik.handleChange}\r\n                  name=\"correo\"\r\n                  id=\"email\"\r\n                  placeholder=\"ejemplo@email.com\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label for=\"password\">Contraseña</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  value={formik.values.password}\r\n                  invalid={formik.errors.password ? true : false}\r\n                  onChange={formik.handleChange}\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  placeholder=\"\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label for=\"Cargo\">Rol</Label>\r\n                {readOnly ? (\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={formik.values.rol}\r\n                    onChange={formik.handleChange}\r\n                    name=\"rol\"\r\n                    id=\"Cargo\"\r\n                    placeholder=\"\"\r\n                  />\r\n                ) : (\r\n                  <Input\r\n                    type=\"select\"\r\n                    invalid={formik.errors.rol ? true : false}\r\n                    onChange={formik.handleChange}\r\n                    name=\"rol\"\r\n                    id=\"Cargo\"\r\n                  >\r\n                    <option selected disabled>\r\n                      Eliga un Cargo\r\n                    </option>\r\n                    <option>Cocinero</option>\r\n                    <option>Mesero</option>\r\n                  </Input>\r\n                )}\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </fieldset>\r\n        <Row style={{ marginBlock: \"15px\" }}>\r\n          <Col xs={12} md={6} lg={4}>\r\n            <div class=\"d-flex justify-content-around\">\r\n              <PrimaryBtn disabled={readOnly} type=\"submit\">\r\n                {isEdit ? \"Guardar\" : \"Crear\"}\r\n              </PrimaryBtn>\r\n\r\n              <SecondaryBtn type=\"button\" onClick={goBack}>\r\n                Cancelar\r\n              </SecondaryBtn>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </ItemCard>\r\n  );\r\n}\r\n\r\nfunction validationSchema() {\r\n  return {\r\n    nombre: yup.string().required(true),\r\n    correo: yup.string().email().required(true),\r\n    rol: yup.string().ensure().required(true),\r\n    password: yup.string().required(true),\r\n  };\r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\addMenuForm.jsx",["315","316"],"import React, { useState, useEffect } from \"react\";\r\nimport { ItemCard } from \"../../../components/cards/Cards\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText,\r\n  UncontrolledAlert,\r\n} from \"reactstrap\";\r\nimport {\r\n  SecondaryBtn,\r\n  PrimaryBtn,\r\n  WaringBtn,\r\n} from \"../../../components/Buttons/Buttons\";\r\nimport { formInitData, AddItems, createMenu, editMenu } from \"./api_request\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Api from \"../../../utils/ClientApi\";\r\nimport Loading from \"../../../components/animations/loading\";\r\nimport DishesForm from \"./dihesForm\";\r\nimport noimg from \"../../../images/no-img.png\";\r\nimport DishesImageForm from \"./addImage\";\r\nimport Alert from \"../../../components/alert/Alert\";\r\nexport default function AddMenuForm() {\r\n  const [modal, setModal] = useState(false);\r\n  const [modalImg, setModalImg] = useState(false);\r\n  const [platos, setPlatos] = useState([]);\r\n  const history = useHistory();\r\n  const [loading, setLoadig] = useState(true);\r\n  const [loadingDishes, setLoadigDishes] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [newDish, setNewDish] = useState(true);\r\n  const [dish, setDish] = useState({});\r\n  const [menuDishes, setMenuDishes] = useState([]);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [isEditDishes, setIsEditDishes] = useState(false);\r\n  const [readOnly, setReadOnly] = useState(false);\r\n  const [initialValues, setinitialValues] = useState({\r\n    nombre: \"\",\r\n    precio: 0,\r\n  });\r\n\r\n  const [alert, setAlert] = useState(false);\r\n  const menuFormik = useFormik({\r\n    initialValues: initialValues,\r\n    validationSchema: yup.object(menuSchema()),\r\n    enableReinitialize: true,\r\n    onSubmit: (form) => {\r\n      if (isEdit) {\r\n        editMenu(form, menuDishes, history.location.state.id).then(() => {\r\n          setLoadig(true);\r\n        });\r\n      } else {\r\n        createMenu(form, menuDishes)\r\n          .then((e) => {\r\n            history.replace(\"/dashboard/menu\");\r\n          })\r\n          .catch(console.log);\r\n      }\r\n    },\r\n  });\r\n\r\n  const editdish = (plato) => {\r\n    setDish(plato);\r\n    setIsEditDishes(true);\r\n    toggle();\r\n  };\r\n  const dishImg = (plato) => {\r\n    setDish(plato);\r\n    setModalImg(!modalImg);\r\n  };\r\n  const toggle = () => setModal(!modal);\r\n  const toggleAlert = () => setAlert(!alert);\r\n  const openAlert = (e) => {\r\n    const exist = menuDishes.filter((plato) => plato._id == e._id).length > 0;\r\n    console.log(exist);\r\n    if (!exist) {\r\n      setDish(e);\r\n      setAlert(true);\r\n    }\r\n  };\r\n  const addDishesToMenu = (data) => {\r\n    setMenuDishes(AddItems(menuDishes, data));\r\n  };\r\n  const deleteItem = (id) => {\r\n    let item = menuDishes.filter((plato) => plato._id !== id);\r\n    setMenuDishes(item);\r\n  };\r\n  const DeleteDish = () => {\r\n    setAlert(false);\r\n    Api.delete(\"/api/plato/\" + dish._id).then((data) => {\r\n      setNewDish(true);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (loading) {\r\n      if (history.location.state) {\r\n        setIsEdit(true);\r\n        setReadOnly(true);\r\n        Api.get(`/api/menu/${history.location.state.id}`)\r\n          .then((data) => {\r\n            const { platos, nombre, precio } = data.data.data;\r\n            setinitialValues({ nombre: nombre, precio: precio });\r\n            setMenuDishes(platos);\r\n            setLoadig(false);\r\n          })\r\n          .catch(() => setError(true));\r\n      } else {\r\n        setLoadig(false);\r\n      }\r\n    }\r\n  }, [loading]);\r\n  useEffect(() => {\r\n    if (newDish) {\r\n      formInitData()\r\n        .then((e) => {\r\n          setPlatos(e.platos);\r\n        })\r\n        .catch(() => {\r\n          setError(true);\r\n        })\r\n        .finally(() => {\r\n          setNewDish(false);\r\n          setLoadigDishes(false);\r\n        });\r\n    }\r\n  }, [newDish]);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n  return (\r\n    <>\r\n      <Alert\r\n        toggle={toggleAlert}\r\n        visible={alert}\r\n        data={dish.nombre}\r\n        accept={DeleteDish}\r\n      />\r\n      <ItemCard style={{ marginTop: \"15px\" }}>\r\n        {isEdit ? (\r\n          <Row>\r\n            <Col>\r\n              <div className=\"d-flex justify-content-end\">\r\n                <SecondaryBtn onClick={() => setReadOnly(false)}>\r\n                  Editar\r\n                </SecondaryBtn>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        ) : null}\r\n        <UncontrolledAlert\r\n          color=\"warning\"\r\n          isOpen={error}\r\n          toggle={() => setError(false)}\r\n        >\r\n          Ocurrio un error intentalo nuevamente\r\n        </UncontrolledAlert>\r\n        <Form onSubmit={menuFormik.handleSubmit}>\r\n          <fieldset disabled={readOnly}>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"nombre\">Nombre del menú</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    invalid={menuFormik.errors.nombre ? true : false}\r\n                    onChange={menuFormik.handleChange}\r\n                    value={menuFormik.values.nombre}\r\n                    name=\"nombre\"\r\n                    id=\"nombre\"\r\n                    placeholder=\"Ej: Desayuno, Almuerzo, etc.\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"precio\">Precio</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    step=\".01\"\r\n                    invalid={menuFormik.errors.precio ? true : false}\r\n                    onChange={menuFormik.handleChange}\r\n                    value={menuFormik.values.precio}\r\n                    name=\"precio\"\r\n                    id=\"precio\"\r\n                    placeholder=\"Precio\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </fieldset>\r\n          <Row>\r\n            <Col>\r\n              <ListGroup>\r\n                {menuDishes.map((dish) => (\r\n                  <ListGroupItem\r\n                    key={dish._id}\r\n                    style={{ backgroundColor: \"#fff0\" }}\r\n                  >\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                      <div>\r\n                        <ListGroupItemHeading>\r\n                          <p className=\"no-margin text-capitalize\">\r\n                            {dish.nombre}\r\n                          </p>\r\n                        </ListGroupItemHeading>\r\n                        <ListGroupItemText className=\"no-margin\">\r\n                          {dish.descripcion}\r\n                        </ListGroupItemText>\r\n                      </div>\r\n                      {!readOnly && (\r\n                        <WaringBtn\r\n                          type=\"button\"\r\n                          onClick={() => deleteItem(dish._id)}\r\n                        >\r\n                          Quitar\r\n                        </WaringBtn>\r\n                      )}\r\n                    </div>\r\n                  </ListGroupItem>\r\n                ))}\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginBlock: \"15px\" }}>\r\n            <Col>\r\n              {!isEdit && (\r\n                <PrimaryBtn\r\n                  type=\"submit\"\r\n                  disabled={menuDishes.length > 0 && !loading ? false : true}\r\n                >\r\n                  Crear\r\n                </PrimaryBtn>\r\n              )}\r\n              {!readOnly & isEdit ? (\r\n                <PrimaryBtn\r\n                  type=\"submit\"\r\n                  disabled={menuDishes.length > 0 && !loading ? false : true}\r\n                >\r\n                  Editar\r\n                </PrimaryBtn>\r\n              ) : null}\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </ItemCard>\r\n      {!readOnly && (\r\n        <>\r\n          <Row>\r\n            <Col xs={12} style={{ marginBlock: \"10px\" }}>\r\n              <SecondaryBtn\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  toggle();\r\n                  setIsEditDishes(false);\r\n                }}\r\n              >\r\n                Crear nuevo plato\r\n              </SecondaryBtn>{\" \"}\r\n              <DishesForm\r\n                modal={modal}\r\n                data={dish}\r\n                setModal={setModal}\r\n                toggle={toggle}\r\n                setNewDish={setNewDish}\r\n                setLoadig={setLoadigDishes}\r\n                loading={loadingDishes}\r\n                isedit={isEditDishes}\r\n              />\r\n              <DishesImageForm\r\n                modal={modalImg}\r\n                data={dish}\r\n                setModal={setModalImg}\r\n                toggle={setModalImg}\r\n                setNewDish={setNewDish}\r\n                setLoadig={setLoadigDishes}\r\n                loading={loadingDishes}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            {loading ? (\r\n              <div>cargando</div>\r\n            ) : (\r\n              platos.map((plato) => (\r\n                <Col key={plato._id} xs={12} lg={6} style={{ marginBlock: 10 }}>\r\n                  <ItemCard>\r\n                    <Row>\r\n                      <Col xs={3}>\r\n                        <img\r\n                          src={\r\n                            plato.imagen\r\n                              ? process.env.REACT_APP_HOST_URL + plato.imagen\r\n                              : noimg\r\n                          }\r\n                          className=\"img-dish\"\r\n                          alt=\"\"\r\n                        />\r\n                      </Col>\r\n                      <Col xs={8}>\r\n                        <p className=\"no-margin title-dish text-capitalize\">\r\n                          {plato.nombre}\r\n                        </p>\r\n                        <p className=\"dish-description \">{plato.descripcion}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <div\r\n                      style={{ marginTop: 10 }}\r\n                      className=\"d-flex justify-content-between\"\r\n                    >\r\n                      <div className=\"d-flex justify-content-around\">\r\n                        <PrimaryBtn\r\n                          type=\"button\"\r\n                          onClick={() => addDishesToMenu(plato)}\r\n                        >\r\n                          Agregar\r\n                        </PrimaryBtn>{\" \"}\r\n                        <SecondaryBtn\r\n                          type=\"button\"\r\n                          onClick={() => editdish(plato)}\r\n                        >\r\n                          Editar\r\n                        </SecondaryBtn>\r\n                        <SecondaryBtn\r\n                          type=\"button\"\r\n                          onClick={() => dishImg(plato)}\r\n                        >\r\n                          {plato.imagen ? \"Cambiar Imagen\" : \" Agregar Imagen\"}\r\n                        </SecondaryBtn>\r\n                      </div>\r\n                      <WaringBtn type=\"button\" onClick={() => openAlert(plato)}>\r\n                        Eliminar\r\n                      </WaringBtn>\r\n                    </div>\r\n                  </ItemCard>\r\n                </Col>\r\n              ))\r\n            )}\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction menuSchema() {\r\n  return {\r\n    nombre: yup.string().required(true),\r\n    precio: yup.number().required(true),\r\n  };\r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\tablesForm.jsx",["317"],"import React, { useState, useEffect } from \"react\";\r\nimport { ItemCard } from \"../../../components/cards/Cards\";\r\nimport { Form, FormGroup, Label, Input, Row, Col, Alert } from \"reactstrap\";\r\nimport { PrimaryBtn, SecondaryBtn } from \"../../../components/Buttons/Buttons\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loading from \"../../../components/animations/loading\";\r\nimport Api from \"../../../utils/ClientApi\";\r\nexport default function TablesForm() {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [done, setDone] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [initialValues, setinitialValues] = useState({\r\n    numero: \"\",\r\n  });\r\n  const goBack = () => history.goBack();\r\n  const formik = useFormik({\r\n    initialValues: initialValues,\r\n    validationSchema: yup.object(validationSchema()),\r\n    enableReinitialize: true,\r\n    onSubmit: (form) => {\r\n      setLoading(true);\r\n      if (isEdit) {\r\n        Api.put(`/api/mesa/${data._id}`, form)\r\n          .then(() => setLoading(false))\r\n          .then(() => setDone(true));\r\n      } else {\r\n        Api.post(\"/api/mesa\", form)\r\n          .then(() => setLoading(false))\r\n          .then(() => setDone(true));\r\n      }\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    if (history.location.state) {\r\n      setIsEdit(true);\r\n      const { numero, ...rest } = history.location.state.table;\r\n      setData({ numero, ...rest });\r\n      setinitialValues({ numero: numero });\r\n    }\r\n  }, []);\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n  if (done) {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <Alert color=\"info\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              Mesa fue {isEdit ? \"editada\" : \"creada\"} correctamente\r\n              <SecondaryBtn type=\"button\" onClick={goBack}>\r\n                Continuar\r\n              </SecondaryBtn>\r\n            </div>\r\n          </Alert>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n  return (\r\n    <ItemCard style={{ marginTop: \"15px\" }}>\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <Row>\r\n          <Col>\r\n            <FormGroup>\r\n              <Label for=\"nombre\">Numero de mesa</Label>\r\n              <Input\r\n                type=\"number\"\r\n                invalid={formik.errors.numero ? true : false}\r\n                onChange={formik.handleChange}\r\n                name=\"numero\"\r\n                value={formik.values.numero}\r\n                id=\"nombre\"\r\n                placeholder=\"\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginBlock: \"15px\" }}>\r\n          <Col xs={12} md={6} lg={4}>\r\n            <div className=\"d-flex justify-content-around\">\r\n              <PrimaryBtn type=\"submit\">\r\n                {isEdit ? \"Editar\" : \"Crear\"}\r\n              </PrimaryBtn>\r\n              <SecondaryBtn type=\"button\" onClick={goBack}>\r\n                Cancelar\r\n              </SecondaryBtn>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </ItemCard>\r\n  );\r\n}\r\nfunction validationSchema() {\r\n  return {\r\n    numero: yup.number().required(true),\r\n  };\r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\singIn\\singin.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\login\\login.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addUsers\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\status\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\waiter\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\client\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\chef\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\admin\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\tables\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\charge\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\order\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\daily\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\tables\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\chef\\dishes\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\ClientApi.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\api_request.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\api.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\Buttons\\Buttons.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\cards\\Cards.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\animations\\loading.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\animations\\blinking.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\addMenu.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addUsers\\addUsers.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\tables.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\status\\status.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\waiter\\layout.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\client\\clientLayout.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\dishes.jsx",["318"],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\chef\\layout.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\order\\orders.jsx",["319","320"],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\charge\\charge.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\admin\\adminLayout.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\tables\\tables.jsx",["321","322"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { BtnCard, SimpleCard } from \"../../../components/cards/Cards\";\r\nimport { PrimaryBtn, SecondaryBtn } from \"../../../components/Buttons/Buttons\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { CenterText, H2 } from \"./style\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Api from \"../../../utils/ClientApi\";\r\nimport { getUserData } from \"../../../utils/tokenFunctions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { OrderActions } from \"../../../redux/actions\";\r\nimport Loading from \"../../../components/animations/loading\";\r\nimport { states } from \"../../../utils/states\";\r\nimport QrReader from \"react-qr-reader\";\r\nexport default function Tables() {\r\n  const router = useHistory();\r\n  const [tables, setTables] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const userData = getUserData();\r\n  const dispatch = useDispatch();\r\n  const [reserved, setReserved] = useState(false);\r\n  const [result, setResult] = useState(null);\r\n  const [activeCamera, setActiveCamera] = useState(false);\r\n  const [cameraMode, setCameraMode] = useState(false);\r\n  // const qrReader = useRef(null);\r\n  // const refPrint=()=>{\r\n  //     console.log(qrReader.current)\r\n  // }\r\n  const getTable = (id, num) => {\r\n    setLoading(true);\r\n    Api.put(`/api/mesa/${id}`, { estado: false })\r\n      .then((e) => {\r\n        Api.post(\"/api/reserva\", {\r\n          mesa: id,\r\n          usuario: userData.id,\r\n        }).then((response) => {\r\n          dispatch({\r\n            type: OrderActions.GET_TABLE,\r\n            payload: { num: num, reserve: response.data.id },\r\n          });\r\n          router.push(\"/dashboard/dishes\");\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        setError(true);\r\n      });\r\n  };\r\n  const handleScan = (data) => {\r\n    if (data) {\r\n      console.log(data);\r\n      try {\r\n        const tableQr = JSON.parse(data);\r\n        let getTable = tables.find((e) => e._id === tableQr._id);\r\n        setResult(getTable);\r\n        handleActiveCamera();\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  const handleError = (err) => {\r\n    console.error(\"error\", err);\r\n  };\r\n  const handleActiveCamera = () => {\r\n    setActiveCamera(!activeCamera);\r\n  };\r\n  const changeCamera = () => {\r\n    setCameraMode(!cameraMode);\r\n  };\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    Api.get(\"/api/mesa\")\r\n      .then((e) => {\r\n        setTables(e.data.data);\r\n        setError(false);\r\n        Api.get(`/api/reserva/usuario/${userData.id}`).then((response) => {\r\n          let userReserves = response.data.data;\r\n          if (userReserves.length > 0) {\r\n            let lastReserveState = userReserves[userReserves.length - 1];\r\n            if (lastReserveState.estado !== states.finalizado) {\r\n              setReserved(true);\r\n              dispatch({\r\n                type: OrderActions.GET_TABLE,\r\n                payload: {\r\n                  num: lastReserveState.mesa.numero,\r\n                  reserve: lastReserveState._id,\r\n                },\r\n              });\r\n            }\r\n          }\r\n          setLoading(false);\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        setError(true);\r\n      });\r\n  }, [error]);\r\n  if (reserved) {\r\n    return (\r\n      <Row>\r\n        <Col style={{ height: 300 }}>\r\n          <BtnCard onClick={() => router.push(\"/dashboard/dishes\")}>\r\n            <CenterText>\r\n              <H2> Ya tienes reservado una Mesa</H2>\r\n              <H2>Continuar</H2>\r\n            </CenterText>\r\n          </BtnCard>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n  if (loading) {\r\n    return <Loading />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        {activeCamera ? (\r\n          <div className=\"center-container\">\r\n            <div style={{ display: \"grid\", marginBottom: 10 }}>\r\n              <QrReader\r\n                facingMode={!cameraMode ? \"environment\" : \"user\"}\r\n                // constraints={{facingMode: 'rear'}}\r\n                // choosedeviceid={choosedevice}\r\n                delay={1000}\r\n                style={{ height: 300, width: 300 }}\r\n                onError={(e) => handleError(e)}\r\n                onScan={(e) => handleScan(e)}\r\n              />\r\n              <Button outline onClick={changeCamera} color=\"secondary\">\r\n                Cambiar cámara\r\n              </Button>\r\n              {/* <Button outline onClick={refPrint} color=\"secondary\">ref</Button> */}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {/* <p>{result}</p> */}\r\n\r\n        {result ? (\r\n          <Row>\r\n            <Col\r\n              md={6}\r\n              xs={12}\r\n              lg={4}\r\n              style={{ height: \"300px\", marginBottom: 15 }}\r\n            >\r\n              <SimpleCard>\r\n                {/* <CenterText> */}\r\n                {result.estado ? (\r\n                  <>\r\n                    <H2>Mesa {result.numero}</H2>\r\n                    <PrimaryBtn\r\n                      disabled={!result.estado}\r\n                      onClick={() => getTable(result._id, result.numero)}\r\n                    >\r\n                      Elegir Mesa\r\n                    </PrimaryBtn>\r\n                    {\"   \"}\r\n                    <SecondaryBtn onClick={handleActiveCamera}>\r\n                      {!activeCamera ? \"Elegir otra\" : \"Apagar camara\"}\r\n                    </SecondaryBtn>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <H2>Mesa {result.numero}</H2>\r\n                    <H2>Esta mesa esta Ocupada </H2>\r\n                    <SecondaryBtn onClick={handleActiveCamera}>\r\n                      {!activeCamera ? \"Elegir otra\" : \"Apagar camara\"}\r\n                    </SecondaryBtn>\r\n                  </>\r\n                )}\r\n\r\n                {/* </CenterText> */}\r\n              </SimpleCard>\r\n            </Col>\r\n          </Row>\r\n        ) : null}\r\n        {!result ? (\r\n          <BtnCard onClick={handleActiveCamera} style={{ marginTop: 20 }}>\r\n            {activeCamera ? \"Apagar cámara\" : \"Escanear código Qr\"}\r\n          </BtnCard>\r\n        ) : null}\r\n\r\n        {/* <Row style={{paddingBlock: '20px'}}>\r\n                    <Col>\r\n                        <h1>Elige un lugar para empezar... </h1>\r\n                    </Col>\r\n                </Row> */}\r\n        {/* <Row>\r\n                    {tables.map(table=>(\r\n                        <Col key={table._id}  md={6} xs={12} lg={4} style={{height: '300px', marginBottom: 15}}>\r\n                            <BtnCard disabled={!table.estado} onClick={()=>getTable(table._id, table.numero)}>\r\n                                <CenterText>\r\n                                    {table.estado?(\r\n                                        <H2>Mesa {table.numero}</H2>\r\n                                    ):(\r\n                                        <>\r\n                                            <H2>Mesa {table.numero}</H2>\r\n                                            <H2>ocupado</H2>\r\n                                        </>\r\n                                    )}\r\n                                    \r\n                                </CenterText>\r\n                            </BtnCard>\r\n                        </Col>\r\n                    ))}\r\n                </Row> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\daily\\daily.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\tables\\tables.jsx",["323"],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\chef\\dishes\\dishes.jsx",["324"],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\Buttons\\style.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\cards\\style.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\animations\\styles.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\tables\\style.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\api_request.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\styles.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\charge\\api_request.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\states.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\viewTables.jsx",["325"],"import React, { useEffect, useState } from \"react\";\r\nimport { PrimaryBtn } from \"./../../../components/Buttons/Buttons\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport QRCode from \"qrcode.react\";\r\nimport Api from \"../../../utils/ClientApi\";\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n} from \"reactstrap\";\r\nexport default function ViewTables() {\r\n  const data = useLocation();\r\n  const history = useHistory();\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    if (loading) {\r\n      if (data.state) {\r\n        Api.get(\"/api/reserva\").then((e) => {\r\n          const user = e.data.data\r\n            .filter(\r\n              (a) => a.estado !== \"finalizado\" && a.mesa._id === data.state._id\r\n            )\r\n            .map((i) => i.usuario);\r\n          if (user[0]) setName(user[0].nombre);\r\n\r\n          setLoading(false);\r\n        });\r\n      }\r\n    }\r\n  }, [loading]);\r\n  if (!loading) {\r\n    if (data.state) {\r\n      const { numero, estado } = data.state;\r\n      return (\r\n        <div className=\"center-container\">\r\n          <Card>\r\n            <div style={{ marginTop: 20 }} className=\"center-container\">\r\n              <QRCode\r\n                size={400}\r\n                imageSettings={{\r\n                  src: `https://via.placeholder.com/150/FFFFFF/000000?text=M${numero}`,\r\n                  height: 50,\r\n                  width: 50,\r\n                }}\r\n                value={JSON.stringify(data.state)}\r\n              />\r\n            </div>\r\n            <CardBody>\r\n              <CardTitle tag=\"h5\">Mesa N: {numero}</CardTitle>\r\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n                {estado ? \"Disponible\" : \"Ocupado\"}{\" \"}\r\n                {!estado && (\r\n                  <>\r\n                    por\r\n                    <p className=\"no-margin text-capitalize\"> {name}</p>\r\n                  </>\r\n                )}\r\n              </CardSubtitle>\r\n              <CardText>\r\n                Este código Qr contiene la información de la mesa que permite al\r\n                cliente tomar la mesa para su pedido\r\n              </CardText>\r\n              <Button onClick={() => history.goBack()}>Volver</Button>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"center-container\">\r\n        <PrimaryBtn onClick={() => history.goBack()}>\r\n          Seleciona una mesa\r\n        </PrimaryBtn>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>Cargando...</div>;\r\n  }\r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\dihesForm.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\public_home\\public.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\cards\\simpleCard.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\footer\\footer.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\public_home\\Schedule.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\addImage.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\alert\\Alert.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\context\\SocketContext.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\context\\useSocket.jsx",[],{"ruleId":"326","replacedBy":"327"},{"ruleId":"328","replacedBy":"329"},{"ruleId":"330","severity":1,"message":"331","line":60,"column":6,"nodeType":"332","endLine":60,"endColumn":8,"suggestions":"333"},{"ruleId":"334","severity":1,"message":"335","line":82,"column":58,"nodeType":"336","messageId":"337","endLine":82,"endColumn":60},{"ruleId":"330","severity":1,"message":"331","line":119,"column":6,"nodeType":"332","endLine":119,"endColumn":15,"suggestions":"338"},{"ruleId":"330","severity":1,"message":"331","line":44,"column":6,"nodeType":"332","endLine":44,"endColumn":8,"suggestions":"339"},{"ruleId":"340","severity":1,"message":"341","line":12,"column":39,"nodeType":"342","messageId":"343","endLine":12,"endColumn":50},{"ruleId":"330","severity":1,"message":"344","line":44,"column":6,"nodeType":"332","endLine":44,"endColumn":15,"suggestions":"345"},{"ruleId":"330","severity":1,"message":"346","line":50,"column":6,"nodeType":"332","endLine":50,"endColumn":15,"suggestions":"347"},{"ruleId":"340","severity":1,"message":"348","line":1,"column":38,"nodeType":"342","messageId":"343","endLine":1,"endColumn":44},{"ruleId":"330","severity":1,"message":"349","line":97,"column":6,"nodeType":"332","endLine":97,"endColumn":13,"suggestions":"350"},{"ruleId":"330","severity":1,"message":"351","line":57,"column":6,"nodeType":"332","endLine":57,"endColumn":14,"suggestions":"352"},{"ruleId":"330","severity":1,"message":"351","line":59,"column":6,"nodeType":"332","endLine":59,"endColumn":14,"suggestions":"353"},{"ruleId":"330","severity":1,"message":"354","line":34,"column":6,"nodeType":"332","endLine":34,"endColumn":15,"suggestions":"355"},"no-native-reassign",["356"],"no-negated-in-lhs",["357"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history.location.state'. Either include it or remove the dependency array.","ArrayExpression",["358"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["359"],["360"],"no-unused-vars","'MenuContent' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getData' and 'socket'. Either include them or remove the dependency array.",["361"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["362"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userData.id'. Either include them or remove the dependency array.",["363"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["364"],["365"],"React Hook useEffect has a missing dependency: 'data.state'. Either include it or remove the dependency array.",["366"],"no-global-assign","no-unsafe-negation",{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"367","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"378","fix":"380"},{"desc":"381","fix":"382"},"Update the dependencies array to be: [history.location.state]",{"range":"383","text":"384"},"Update the dependencies array to be: [history.location.state, loading]",{"range":"385","text":"386"},{"range":"387","text":"384"},"Update the dependencies array to be: [allData, getData, socket]",{"range":"388","text":"389"},"Update the dependencies array to be: [getData, loading]",{"range":"390","text":"391"},"Update the dependencies array to be: [dispatch, error, userData.id]",{"range":"392","text":"393"},"Update the dependencies array to be: [orders, socket]",{"range":"394","text":"395"},{"range":"396","text":"395"},"Update the dependencies array to be: [data.state, loading]",{"range":"397","text":"398"},[1955,1957],"[history.location.state]",[3626,3635],"[history.location.state, loading]",[1623,1625],[1646,1655],"[allData, getData, socket]",[1732,1741],"[getData, loading]",[3289,3296],"[dispatch, error, userData.id]",[1570,1578],"[orders, socket]",[1698,1706],[986,995],"[data.state, loading]"]