[{"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\index.js":"1","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\reportWebVitals.js":"2","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\App.js":"3","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\style.js":"4","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\store.js":"5","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\routers.jsx":"6","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\auth.js":"7","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\oder.js":"8","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\client\\dahsboard.jsx":"9","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\waiters\\dashboard.jsx":"10","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\chef\\dashboard.jsx":"11","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\admin\\dashboard.jsx":"12","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\actions.js":"13","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\tokenFunctions.js":"14","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\singIn\\index.js":"15","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\login\\index.js":"16","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addUsers\\userForm.jsx":"17","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\addMenuForm.jsx":"18","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\tablesForm.jsx":"19","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\singIn\\singin.jsx":"20","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\login\\login.jsx":"21","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\index.js":"22","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addUsers\\index.js":"23","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\index.js":"24","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\status\\index.js":"25","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\waiter\\index.js":"26","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\client\\index.js":"27","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\chef\\index.js":"28","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\admin\\index.js":"29","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\index.js":"30","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\tables\\index.js":"31","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\charge\\index.js":"32","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\order\\index.js":"33","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\daily\\index.js":"34","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\tables\\index.js":"35","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\chef\\dishes\\index.js":"36","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\ClientApi.js":"37","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\api_request.js":"38","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\api.js":"39","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\Buttons\\Buttons.jsx":"40","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\cards\\Cards.jsx":"41","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\animations\\loading.jsx":"42","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\animations\\blinking.jsx":"43","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\addMenu.jsx":"44","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addUsers\\addUsers.jsx":"45","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\tables.jsx":"46","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\status\\status.jsx":"47","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\waiter\\layout.jsx":"48","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\client\\clientLayout.jsx":"49","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\dishes.jsx":"50","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\chef\\layout.jsx":"51","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\order\\orders.jsx":"52","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\charge\\charge.jsx":"53","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\admin\\adminLayout.jsx":"54","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\tables\\tables.jsx":"55","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\daily\\daily.jsx":"56","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\tables\\tables.jsx":"57","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\chef\\dishes\\dishes.jsx":"58","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\Buttons\\style.js":"59","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\cards\\style.js":"60","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\animations\\styles.js":"61","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\tables\\style.js":"62","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\api_request.js":"63","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\styles.js":"64","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\charge\\api_request.js":"65","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\states.js":"66","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\viewTables.jsx":"67","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\dihesForm.jsx":"68","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\public_home\\public.jsx":"69","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\cards\\simpleCard.jsx":"70","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\footer\\footer.jsx":"71","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\public_home\\Schedule.jsx":"72","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\addImage.jsx":"73","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\alert\\Alert.jsx":"74","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\context\\SocketContext.jsx":"75","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\context\\useSocket.jsx":"76"},{"size":539,"mtime":1613195290124,"results":"77","hashOfConfig":"78"},{"size":362,"mtime":1611638353069,"results":"79","hashOfConfig":"78"},{"size":456,"mtime":1644294919368,"results":"80","hashOfConfig":"78"},{"size":493,"mtime":1643964592344,"results":"81","hashOfConfig":"78"},{"size":309,"mtime":1613195037386,"results":"82","hashOfConfig":"78"},{"size":1951,"mtime":1643857363791,"results":"83","hashOfConfig":"78"},{"size":968,"mtime":1623965908473,"results":"84","hashOfConfig":"78"},{"size":552,"mtime":1613290533660,"results":"85","hashOfConfig":"78"},{"size":1068,"mtime":1613302193891,"results":"86","hashOfConfig":"78"},{"size":919,"mtime":1630719169349,"results":"87","hashOfConfig":"78"},{"size":956,"mtime":1623961378034,"results":"88","hashOfConfig":"78"},{"size":1676,"mtime":1624043556807,"results":"89","hashOfConfig":"78"},{"size":253,"mtime":1613209972929,"results":"90","hashOfConfig":"78"},{"size":542,"mtime":1613298408812,"results":"91","hashOfConfig":"78"},{"size":32,"mtime":1612994462044,"results":"92","hashOfConfig":"78"},{"size":31,"mtime":1611640044210,"results":"93","hashOfConfig":"78"},{"size":6154,"mtime":1630817153659,"results":"94","hashOfConfig":"78"},{"size":11589,"mtime":1644296596202,"results":"95","hashOfConfig":"78"},{"size":3270,"mtime":1644296927421,"results":"96","hashOfConfig":"78"},{"size":5581,"mtime":1630721176827,"results":"97","hashOfConfig":"78"},{"size":4985,"mtime":1643950360574,"results":"98","hashOfConfig":"78"},{"size":33,"mtime":1612581291327,"results":"99","hashOfConfig":"78"},{"size":34,"mtime":1612581226801,"results":"100","hashOfConfig":"78"},{"size":33,"mtime":1623961378242,"results":"101","hashOfConfig":"78"},{"size":32,"mtime":1612581374743,"results":"102","hashOfConfig":"78"},{"size":33,"mtime":1623961378082,"results":"103","hashOfConfig":"78"},{"size":38,"mtime":1611726379108,"results":"104","hashOfConfig":"78"},{"size":33,"mtime":1623961378060,"results":"105","hashOfConfig":"78"},{"size":37,"mtime":1623961378058,"results":"106","hashOfConfig":"78"},{"size":32,"mtime":1611796814353,"results":"107","hashOfConfig":"78"},{"size":32,"mtime":1611781853938,"results":"108","hashOfConfig":"78"},{"size":32,"mtime":1612325866032,"results":"109","hashOfConfig":"78"},{"size":32,"mtime":1612236290992,"results":"110","hashOfConfig":"78"},{"size":31,"mtime":1612488727423,"results":"111","hashOfConfig":"78"},{"size":32,"mtime":1612242521038,"results":"112","hashOfConfig":"78"},{"size":32,"mtime":1612499483519,"results":"113","hashOfConfig":"78"},{"size":247,"mtime":1643973723773,"results":"114","hashOfConfig":"78"},{"size":3130,"mtime":1643977149836,"results":"115","hashOfConfig":"78"},{"size":180,"mtime":1643943982283,"results":"116","hashOfConfig":"78"},{"size":552,"mtime":1644117376667,"results":"117","hashOfConfig":"78"},{"size":520,"mtime":1612994275245,"results":"118","hashOfConfig":"78"},{"size":590,"mtime":1613205911659,"results":"119","hashOfConfig":"78"},{"size":235,"mtime":1611725737852,"results":"120","hashOfConfig":"78"},{"size":3371,"mtime":1644115750349,"results":"121","hashOfConfig":"78"},{"size":2107,"mtime":1644130755194,"results":"122","hashOfConfig":"78"},{"size":3453,"mtime":1644296876759,"results":"123","hashOfConfig":"78"},{"size":1717,"mtime":1644121708841,"results":"124","hashOfConfig":"78"},{"size":2485,"mtime":1623961378106,"results":"125","hashOfConfig":"78"},{"size":1760,"mtime":1644134293522,"results":"126","hashOfConfig":"78"},{"size":8046,"mtime":1644298156100,"results":"127","hashOfConfig":"78"},{"size":1864,"mtime":1623961378077,"results":"128","hashOfConfig":"78"},{"size":5912,"mtime":1644295682321,"results":"129","hashOfConfig":"78"},{"size":3983,"mtime":1644294959129,"results":"130","hashOfConfig":"78"},{"size":1987,"mtime":1623961378053,"results":"131","hashOfConfig":"78"},{"size":7346,"mtime":1644134415986,"results":"132","hashOfConfig":"78"},{"size":2999,"mtime":1623961378476,"results":"133","hashOfConfig":"78"},{"size":3381,"mtime":1644295105539,"results":"134","hashOfConfig":"78"},{"size":6009,"mtime":1644295861317,"results":"135","hashOfConfig":"78"},{"size":1172,"mtime":1644116779131,"results":"136","hashOfConfig":"78"},{"size":945,"mtime":1644297393750,"results":"137","hashOfConfig":"78"},{"size":265,"mtime":1611725579092,"results":"138","hashOfConfig":"78"},{"size":325,"mtime":1611796826528,"results":"139","hashOfConfig":"78"},{"size":2739,"mtime":1623961378334,"results":"140","hashOfConfig":"78"},{"size":1021,"mtime":1613207632917,"results":"141","hashOfConfig":"78"},{"size":663,"mtime":1623961378401,"results":"142","hashOfConfig":"78"},{"size":281,"mtime":1623961378110,"results":"143","hashOfConfig":"78"},{"size":2605,"mtime":1644297190655,"results":"144","hashOfConfig":"78"},{"size":2952,"mtime":1643975856659,"results":"145","hashOfConfig":"78"},{"size":4140,"mtime":1644423080538,"results":"146","hashOfConfig":"78"},{"size":191,"mtime":1611725065636,"results":"147","hashOfConfig":"78"},{"size":1114,"mtime":1644291185187,"results":"148","hashOfConfig":"78"},{"size":727,"mtime":1643944488224,"results":"149","hashOfConfig":"78"},{"size":3119,"mtime":1643978336100,"results":"150","hashOfConfig":"78"},{"size":618,"mtime":1644115349934,"results":"151","hashOfConfig":"78"},{"size":482,"mtime":1644387820431,"results":"152","hashOfConfig":"78"},{"size":632,"mtime":1644296361172,"results":"153","hashOfConfig":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"iosqk0",{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"156"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"156"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"156"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"156"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"156"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"156"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"156"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"156"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"156"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"156"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\index.js",[],["317","318"],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\reportWebVitals.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\App.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\style.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\store.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\routers.jsx",["319"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Login from \"./views/login\";\r\nimport SingIn from \"./views/singIn\";\r\nimport ClientDashboard from \"./components/dashboards/client/dahsboard\";\r\nimport WaiterDashboard from \"./components/dashboards/waiters/dashboard\";\r\nimport ChefDashboard from \"./components/dashboards/chef/dashboard\";\r\nimport AdminDashboard from \"./components/dashboards/admin/dashboard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Public_home from \"./views/public_home/public\";\r\n\r\nexport default function Routers() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path={\"/\"} exact={true}>\r\n          <Public_home />\r\n        </Route>\r\n        <Route path={\"/login\"} exact={true}>\r\n          <Login />\r\n        </Route>\r\n        <Route path={\"/singIn\"} exact={true}>\r\n          <SingIn />\r\n        </Route>\r\n        <PrivateRoute path={\"/dashboard\"}>\r\n          <Dashboard />\r\n        </PrivateRoute>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction PrivateRoute({ children, ...rest }) {\r\n  const isLoggedIn = useSelector((state) => state.authReducer.token);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isLoggedIn ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    ></Route>\r\n  );\r\n}\r\n\r\nfunction Dashboard() {\r\n  const rol = useSelector((state) => state.authReducer.rol);\r\n  console.log(rol.toLowerCase());\r\n  if (rol.toLowerCase() === \"cliente\") {\r\n    return <ClientDashboard />;\r\n  }\r\n  if (rol.toLowerCase() === \"administrador\") {\r\n    return <AdminDashboard />;\r\n  }\r\n  if (rol.toLowerCase() === \"cocinero\") {\r\n    return <ChefDashboard />;\r\n  }\r\n  if (rol.toLowerCase() === \"mesero\") {\r\n    return <WaiterDashboard />;\r\n  }\r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\auth.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\oder.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\client\\dahsboard.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\waiters\\dashboard.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\chef\\dashboard.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\dashboards\\admin\\dashboard.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\redux\\actions.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\tokenFunctions.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\singIn\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\login\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addUsers\\userForm.jsx",["320"],"import React, { useState, useEffect } from \"react\";\r\nimport { ItemCard } from \"../../../components/cards/Cards\";\r\nimport { Form, FormGroup, Label, Input, Row, Col, Alert } from \"reactstrap\";\r\nimport { PrimaryBtn, SecondaryBtn } from \"../../../components/Buttons/Buttons\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loading from \"../../../components/animations/loading\";\r\nimport Api from \"../../../utils/ClientApi\";\r\nexport default function UserForm() {\r\n  const history = useHistory();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [readOnly, setReadOnly] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [initialValues, setinitialValues] = useState({\r\n    nombre: \"\",\r\n    correo: \"\",\r\n    password: \"\",\r\n    rol: \"\",\r\n  });\r\n  const [done, setDone] = useState(false);\r\n  const goBack = () => history.goBack();\r\n  const formik = useFormik({\r\n    initialValues: initialValues,\r\n    validationSchema: yup.object(validationSchema()),\r\n    enableReinitialize: true,\r\n    onSubmit: (form) => {\r\n      if (isEdit) {\r\n        Api.put(`/api/usuario/${history.location.state.id}`, form).then((e) => {\r\n          setDone(true);\r\n        });\r\n      } else {\r\n        Api.post(`/api/usuario`, form).then((e) => {\r\n          setDone(true);\r\n        });\r\n      }\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    if (history.location.state) {\r\n      setLoading(true);\r\n      setIsEdit(true);\r\n      setReadOnly(true);\r\n      let userId = history.location.state.id;\r\n      Api.get(`api/usuario/${userId}`)\r\n        .then((e) => {\r\n          const { nombre, correo, rol } = e.data.data;\r\n          setinitialValues({\r\n            nombre: nombre,\r\n            correo: correo,\r\n            password: \"\",\r\n            rol: rol,\r\n          });\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n  if (done) {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <Alert color=\"info\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              Usuario Guardado Correctamente\r\n              <SecondaryBtn type=\"button\" onClick={goBack}>\r\n                Continuar\r\n              </SecondaryBtn>\r\n            </div>\r\n          </Alert>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n  return (\r\n    <ItemCard style={{ marginTop: \"15px\" }}>\r\n      {isEdit ? (\r\n        <Row>\r\n          <Col>\r\n            <div className=\"d-flex justify-content-end\">\r\n              <SecondaryBtn onClick={() => setReadOnly(false)}>\r\n                Editar\r\n              </SecondaryBtn>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <fieldset disabled={readOnly}>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label for=\"nombre\">Usuario</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  value={formik.values.nombre}\r\n                  invalid={formik.errors.nombre ? true : false}\r\n                  onChange={formik.handleChange}\r\n                  name=\"nombre\"\r\n                  id=\"nombre\"\r\n                  placeholder=\"\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label for=\"email\">Correo</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  value={formik.values.correo}\r\n                  invalid={formik.errors.correo ? true : false}\r\n                  onChange={formik.handleChange}\r\n                  name=\"correo\"\r\n                  id=\"email\"\r\n                  placeholder=\"ejemplo@email.com\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label for=\"password\">Contraseña</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  value={formik.values.password}\r\n                  invalid={formik.errors.password ? true : false}\r\n                  onChange={formik.handleChange}\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  placeholder=\"\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label for=\"Cargo\">Rol</Label>\r\n                {readOnly ? (\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={formik.values.rol}\r\n                    onChange={formik.handleChange}\r\n                    name=\"rol\"\r\n                    id=\"Cargo\"\r\n                    placeholder=\"\"\r\n                  />\r\n                ) : (\r\n                  <Input\r\n                    type=\"select\"\r\n                    invalid={formik.errors.rol ? true : false}\r\n                    onChange={formik.handleChange}\r\n                    name=\"rol\"\r\n                    id=\"Cargo\"\r\n                  >\r\n                    <option selected disabled>\r\n                      Eliga un Cargo\r\n                    </option>\r\n                    <option>Cocinero</option>\r\n                    <option>Mesero</option>\r\n                  </Input>\r\n                )}\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </fieldset>\r\n        <Row style={{ marginBlock: \"15px\" }}>\r\n          <Col xs={12} md={6} lg={4}>\r\n            <div class=\"d-flex justify-content-around\">\r\n              <PrimaryBtn disabled={readOnly} type=\"submit\">\r\n                {isEdit ? \"Guardar\" : \"Crear\"}\r\n              </PrimaryBtn>\r\n\r\n              <SecondaryBtn type=\"button\" onClick={goBack}>\r\n                Cancelar\r\n              </SecondaryBtn>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </ItemCard>\r\n  );\r\n}\r\n\r\nfunction validationSchema() {\r\n  return {\r\n    nombre: yup.string().required(true),\r\n    correo: yup.string().email().required(true),\r\n    rol: yup.string().ensure().required(true),\r\n    password: yup.string().required(true),\r\n  };\r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\addMenuForm.jsx",["321","322"],"import React, { useState, useEffect } from \"react\";\r\nimport { ItemCard } from \"../../../components/cards/Cards\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText,\r\n  UncontrolledAlert,\r\n} from \"reactstrap\";\r\nimport {\r\n  SecondaryBtn,\r\n  PrimaryBtn,\r\n  WaringBtn,\r\n} from \"../../../components/Buttons/Buttons\";\r\nimport { formInitData, AddItems, createMenu, editMenu } from \"./api_request\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Api from \"../../../utils/ClientApi\";\r\nimport Loading from \"../../../components/animations/loading\";\r\nimport DishesForm from \"./dihesForm\";\r\nimport noimg from \"../../../images/no-img.png\";\r\nimport DishesImageForm from \"./addImage\";\r\nimport Alert from \"../../../components/alert/Alert\";\r\nexport default function AddMenuForm() {\r\n  const [modal, setModal] = useState(false);\r\n  const [modalImg, setModalImg] = useState(false);\r\n  const [platos, setPlatos] = useState([]);\r\n  const history = useHistory();\r\n  const [loading, setLoadig] = useState(true);\r\n  const [loadingDishes, setLoadigDishes] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [newDish, setNewDish] = useState(true);\r\n  const [dish, setDish] = useState({});\r\n  const [menuDishes, setMenuDishes] = useState([]);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [isEditDishes, setIsEditDishes] = useState(false);\r\n  const [readOnly, setReadOnly] = useState(false);\r\n  const [initialValues, setinitialValues] = useState({\r\n    nombre: \"\",\r\n    precio: 0,\r\n  });\r\n\r\n  const [alert, setAlert] = useState(false);\r\n  const menuFormik = useFormik({\r\n    initialValues: initialValues,\r\n    validationSchema: yup.object(menuSchema()),\r\n    enableReinitialize: true,\r\n    onSubmit: (form) => {\r\n      if (isEdit) {\r\n        editMenu(form, menuDishes, history.location.state.id).then(() => {\r\n          setLoadig(true);\r\n        });\r\n      } else {\r\n        createMenu(form, menuDishes)\r\n          .then((e) => {\r\n            history.replace(\"/dashboard/menu\");\r\n          })\r\n          .catch(console.log);\r\n      }\r\n    },\r\n  });\r\n\r\n  const editdish = (plato) => {\r\n    setDish(plato);\r\n    setIsEditDishes(true);\r\n    toggle();\r\n  };\r\n  const dishImg = (plato) => {\r\n    setDish(plato);\r\n    setModalImg(!modalImg);\r\n  };\r\n  const toggle = () => setModal(!modal);\r\n  const toggleAlert = () => setAlert(!alert);\r\n  const openAlert = (e) => {\r\n    const exist = menuDishes.filter((plato) => plato._id == e._id).length > 0;\r\n    console.log(exist);\r\n    if (!exist) {\r\n      setDish(e);\r\n      setAlert(true);\r\n    }\r\n  };\r\n  const addDishesToMenu = (data) => {\r\n    setMenuDishes(AddItems(menuDishes, data));\r\n  };\r\n  const deleteItem = (id) => {\r\n    let item = menuDishes.filter((plato) => plato._id !== id);\r\n    setMenuDishes(item);\r\n  };\r\n  const DeleteDish = () => {\r\n    setAlert(false);\r\n    Api.delete(\"/api/plato/\" + dish._id).then((data) => {\r\n      setNewDish(true);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (loading) {\r\n      if (history.location.state) {\r\n        setIsEdit(true);\r\n        setReadOnly(true);\r\n        Api.get(`/api/menu/${history.location.state.id}`)\r\n          .then((data) => {\r\n            const { platos, nombre, precio } = data.data.data;\r\n            setinitialValues({ nombre: nombre, precio: precio });\r\n            setMenuDishes(platos);\r\n            setLoadig(false);\r\n          })\r\n          .catch(() => setError(true));\r\n      } else {\r\n        setLoadig(false);\r\n      }\r\n    }\r\n  }, [loading]);\r\n  useEffect(() => {\r\n    if (newDish) {\r\n      formInitData()\r\n        .then((e) => {\r\n          setPlatos(e.platos);\r\n        })\r\n        .catch(() => {\r\n          setError(true);\r\n        })\r\n        .finally(() => {\r\n          setNewDish(false);\r\n          setLoadigDishes(false);\r\n        });\r\n    }\r\n  }, [newDish]);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n  return (\r\n    <>\r\n      <Alert\r\n        toggle={toggleAlert}\r\n        visible={alert}\r\n        data={dish.nombre}\r\n        accept={DeleteDish}\r\n      />\r\n      <ItemCard style={{ marginTop: \"15px\" }}>\r\n        {isEdit ? (\r\n          <Row>\r\n            <Col>\r\n              <div className=\"d-flex justify-content-end\">\r\n                <SecondaryBtn onClick={() => setReadOnly(false)}>\r\n                  Editar\r\n                </SecondaryBtn>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        ) : null}\r\n        <UncontrolledAlert\r\n          color=\"warning\"\r\n          isOpen={error}\r\n          toggle={() => setError(false)}\r\n        >\r\n          Ocurrio un error intentalo nuevamente\r\n        </UncontrolledAlert>\r\n        <Form onSubmit={menuFormik.handleSubmit}>\r\n          <fieldset disabled={readOnly}>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"nombre\">Nombre del menú</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    invalid={menuFormik.errors.nombre ? true : false}\r\n                    onChange={menuFormik.handleChange}\r\n                    value={menuFormik.values.nombre}\r\n                    name=\"nombre\"\r\n                    id=\"nombre\"\r\n                    placeholder=\"Ej: Desayuno, Almuerzo, etc.\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"precio\">Precio</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    step=\".01\"\r\n                    invalid={menuFormik.errors.precio ? true : false}\r\n                    onChange={menuFormik.handleChange}\r\n                    value={menuFormik.values.precio}\r\n                    name=\"precio\"\r\n                    id=\"precio\"\r\n                    placeholder=\"Precio\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </fieldset>\r\n          <Row>\r\n            <Col>\r\n              <ListGroup>\r\n                {menuDishes.map((dish) => (\r\n                  <ListGroupItem\r\n                    key={dish._id}\r\n                    style={{ backgroundColor: \"#fff0\" }}\r\n                  >\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                      <div>\r\n                        <ListGroupItemHeading>\r\n                          <p className=\"no-margin text-capitalize\">\r\n                            {dish.nombre}\r\n                          </p>\r\n                        </ListGroupItemHeading>\r\n                        <ListGroupItemText className=\"no-margin\">\r\n                          {dish.descripcion}\r\n                        </ListGroupItemText>\r\n                      </div>\r\n                      {!readOnly && (\r\n                        <WaringBtn\r\n                          type=\"button\"\r\n                          onClick={() => deleteItem(dish._id)}\r\n                        >\r\n                          Quitar\r\n                        </WaringBtn>\r\n                      )}\r\n                    </div>\r\n                  </ListGroupItem>\r\n                ))}\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginBlock: \"15px\" }}>\r\n            <Col>\r\n              {!isEdit && (\r\n                <PrimaryBtn\r\n                  type=\"submit\"\r\n                  disabled={menuDishes.length > 0 && !loading ? false : true}\r\n                >\r\n                  Crear\r\n                </PrimaryBtn>\r\n              )}\r\n              {!readOnly & isEdit ? (\r\n                <PrimaryBtn\r\n                  type=\"submit\"\r\n                  disabled={menuDishes.length > 0 && !loading ? false : true}\r\n                >\r\n                  Editar\r\n                </PrimaryBtn>\r\n              ) : null}\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </ItemCard>\r\n      {!readOnly && (\r\n        <>\r\n          <Row>\r\n            <Col xs={12} style={{ marginBlock: \"10px\" }}>\r\n              <SecondaryBtn\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  toggle();\r\n                  setIsEditDishes(false);\r\n                }}\r\n              >\r\n                Crear nuevo plato\r\n              </SecondaryBtn>{\" \"}\r\n              <DishesForm\r\n                modal={modal}\r\n                data={dish}\r\n                setModal={setModal}\r\n                toggle={toggle}\r\n                setNewDish={setNewDish}\r\n                setLoadig={setLoadigDishes}\r\n                loading={loadingDishes}\r\n                isedit={isEditDishes}\r\n              />\r\n              <DishesImageForm\r\n                modal={modalImg}\r\n                data={dish}\r\n                setModal={setModalImg}\r\n                toggle={setModalImg}\r\n                setNewDish={setNewDish}\r\n                setLoadig={setLoadigDishes}\r\n                loading={loadingDishes}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            {loading ? (\r\n              <div>cargando</div>\r\n            ) : (\r\n              platos.map((plato) => (\r\n                <Col key={plato._id} xs={12} lg={6} style={{ marginBlock: 10 }}>\r\n                  <ItemCard>\r\n                    <Row>\r\n                      <Col xs={3}>\r\n                        <img\r\n                          src={\r\n                            plato.imagen\r\n                              ? process.env.REACT_APP_HOST_URL + plato.imagen\r\n                              : noimg\r\n                          }\r\n                          className=\"img-dish\"\r\n                          alt=\"\"\r\n                        />\r\n                      </Col>\r\n                      <Col xs={8}>\r\n                        <p className=\"no-margin title-dish text-capitalize\">\r\n                          {plato.nombre}\r\n                        </p>\r\n                        <p className=\"dish-description \">{plato.descripcion}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <div\r\n                      style={{ marginTop: 10 }}\r\n                      className=\"d-flex justify-content-between\"\r\n                    >\r\n                      <div className=\"d-flex justify-content-around\">\r\n                        <PrimaryBtn\r\n                          type=\"button\"\r\n                          onClick={() => addDishesToMenu(plato)}\r\n                        >\r\n                          Agregar\r\n                        </PrimaryBtn>{\" \"}\r\n                        <SecondaryBtn\r\n                          type=\"button\"\r\n                          onClick={() => editdish(plato)}\r\n                        >\r\n                          Editar\r\n                        </SecondaryBtn>\r\n                        <SecondaryBtn\r\n                          type=\"button\"\r\n                          onClick={() => dishImg(plato)}\r\n                        >\r\n                          {plato.imagen ? \"Cambiar Imagen\" : \" Agregar Imagen\"}\r\n                        </SecondaryBtn>\r\n                      </div>\r\n                      <WaringBtn type=\"button\" onClick={() => openAlert(plato)}>\r\n                        Eliminar\r\n                      </WaringBtn>\r\n                    </div>\r\n                  </ItemCard>\r\n                </Col>\r\n              ))\r\n            )}\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction menuSchema() {\r\n  return {\r\n    nombre: yup.string().required(true),\r\n    precio: yup.number().required(true),\r\n  };\r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\tablesForm.jsx",["323"],"import React, { useState, useEffect } from \"react\";\r\nimport { ItemCard } from \"../../../components/cards/Cards\";\r\nimport { Form, FormGroup, Label, Input, Row, Col, Alert } from \"reactstrap\";\r\nimport { PrimaryBtn, SecondaryBtn } from \"../../../components/Buttons/Buttons\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loading from \"../../../components/animations/loading\";\r\nimport Api from \"../../../utils/ClientApi\";\r\nexport default function TablesForm() {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [done, setDone] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [initialValues, setinitialValues] = useState({\r\n    numero: \"\",\r\n  });\r\n  const goBack = () => history.goBack();\r\n  const formik = useFormik({\r\n    initialValues: initialValues,\r\n    validationSchema: yup.object(validationSchema()),\r\n    enableReinitialize: true,\r\n    onSubmit: (form) => {\r\n      setLoading(true);\r\n      if (isEdit) {\r\n        Api.put(`/api/mesa/${data._id}`, form)\r\n          .then(() => setLoading(false))\r\n          .then(() => setDone(true));\r\n      } else {\r\n        Api.post(\"/api/mesa\", form)\r\n          .then(() => setLoading(false))\r\n          .then(() => setDone(true));\r\n      }\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    if (history.location.state) {\r\n      setIsEdit(true);\r\n      const { numero, ...rest } = history.location.state.table;\r\n      setData({ numero, ...rest });\r\n      setinitialValues({ numero: numero });\r\n    }\r\n  }, []);\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n  if (done) {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <Alert color=\"info\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              Mesa fue {isEdit ? \"editada\" : \"creada\"} correctamente\r\n              <SecondaryBtn type=\"button\" onClick={goBack}>\r\n                Continuar\r\n              </SecondaryBtn>\r\n            </div>\r\n          </Alert>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n  return (\r\n    <ItemCard style={{ marginTop: \"15px\" }}>\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <Row>\r\n          <Col>\r\n            <FormGroup>\r\n              <Label for=\"nombre\">Numero de mesa</Label>\r\n              <Input\r\n                type=\"number\"\r\n                invalid={formik.errors.numero ? true : false}\r\n                onChange={formik.handleChange}\r\n                name=\"numero\"\r\n                value={formik.values.numero}\r\n                id=\"nombre\"\r\n                placeholder=\"\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginBlock: \"15px\" }}>\r\n          <Col xs={12} md={6} lg={4}>\r\n            <div className=\"d-flex justify-content-around\">\r\n              <PrimaryBtn type=\"submit\">\r\n                {isEdit ? \"Editar\" : \"Crear\"}\r\n              </PrimaryBtn>\r\n              <SecondaryBtn type=\"button\" onClick={goBack}>\r\n                Cancelar\r\n              </SecondaryBtn>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </ItemCard>\r\n  );\r\n}\r\nfunction validationSchema() {\r\n  return {\r\n    numero: yup.number().required(true),\r\n  };\r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\singIn\\singin.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\login\\login.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addUsers\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\status\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\waiter\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\client\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\chef\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\admin\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\tables\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\charge\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\order\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\daily\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\tables\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\chef\\dishes\\index.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\ClientApi.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\api_request.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\api.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\Buttons\\Buttons.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\cards\\Cards.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\animations\\loading.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\animations\\blinking.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\addMenu.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addUsers\\addUsers.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\tables.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\status\\status.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\waiter\\layout.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\client\\clientLayout.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\dishes.jsx",["324"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ItemCard, BtnCard } from \"../../../components/cards/Cards\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { PrimaryBtn, SecondaryBtn } from \"../../../components/Buttons/Buttons\";\r\nimport { StikyContent, RowResponsive, MenuContent } from \"./styles\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { OrderActions } from \"../../../redux/actions\";\r\nimport { submit, initialData, AddItems } from \"./api_request\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CenterText, H2 } from \"../tables/style\";\r\nimport Loading from \"../../../components/animations/loading\";\r\nimport { Context } from \"../../../context/SocketContext\";\r\nimport noimg from \"../../../images/no-img.png\";\r\n\r\nexport default function Dishes() {\r\n  const [userSelected, setUserSelected] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [menu, setMenu] = useState([]);\r\n  const [loading, setLoadig] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [access, setAccess] = useState(true);\r\n  const { socket } = useContext(Context);\r\n  const reserveID = useSelector((state) => state.orderReducer.reserve);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const toggle = () => {\r\n    let acumulator = 0;\r\n    userSelected.forEach((e) => {\r\n      acumulator += e.total;\r\n    });\r\n    setTotal(acumulator);\r\n    setModal(!modal);\r\n  };\r\n\r\n  const selectItem = (data) => {\r\n    setUserSelected(AddItems(userSelected, data));\r\n  };\r\n\r\n  const deleteItem = (id) => {\r\n    let item = userSelected.filter((plato) => plato._id !== id);\r\n    setUserSelected(item);\r\n  };\r\n\r\n  const submit_order = () => {\r\n    setLoadig(true);\r\n    submit(reserveID, userSelected, total)\r\n      .then((e) => {\r\n        socket.emit(\"cliente-cocinero\");\r\n        dispatch({ type: OrderActions.SET_ORDER, payload: e.stado });\r\n\r\n        history.push(\"/dashboard/order\");\r\n      })\r\n      .catch((e) => {\r\n        setLoadig(false);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    setLoadig(true);\r\n    initialData()\r\n      .then((e) => {\r\n        setAccess(e.pageAccess);\r\n        setMenu(e.menu);\r\n        setLoadig(false);\r\n      })\r\n      .catch((e) => {\r\n        setLoadig(false);\r\n      });\r\n  }, []);\r\n\r\n  if (!access) {\r\n    return (\r\n      <Row>\r\n        <Col style={{ height: 300 }}>\r\n          <BtnCard onClick={() => history.push(\"/dashboard/order\")}>\r\n            <CenterText>\r\n              <H2> Ya estan procesando tu pedido</H2>\r\n              <H2>Continuar</H2>\r\n            </CenterText>\r\n          </BtnCard>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n  if (loading) {\r\n    return <Loading />;\r\n  } else {\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col>\r\n            <h2 className=\"text-center\">Elige Tus Platos</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12} sm={12} md={5} lg={4}>\r\n            <StikyContent>\r\n              <SelectedItems data={userSelected} deleteItem={deleteItem} />\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <PrimaryBtn onClick={toggle}>\r\n                      <h4 style={{ margin: 0 }}> Ordenar </h4>\r\n                    </PrimaryBtn>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </StikyContent>\r\n          </Col>\r\n          <Col xs={12} sm={12} md={7} lg={8}>\r\n            <Row>\r\n              {menu.map((data) => (\r\n                <Col style={{ marginBlock: \"5px\" }} key={data._id} xs={12}>\r\n                  <ItemCard>\r\n                    <h5 className=\"text-capitalize\">{data.nombre}</h5>\r\n                    <MenuContent className={\"scroll\"}>\r\n                      {data.platos.map((plato) => (\r\n                        <Col\r\n                          key={plato._id}\r\n                          style={{ marginBlock: 15 }}\r\n                          sm={12}\r\n                        >\r\n                          <Row>\r\n                            <Col xs={3}>\r\n                              <img\r\n                                src={\r\n                                  plato.imagen\r\n                                    ? process.env.REACT_APP_HOST_URL +\r\n                                      plato.imagen\r\n                                    : noimg\r\n                                }\r\n                                className=\"img-dish\"\r\n                                alt=\"\"\r\n                              />\r\n                            </Col>\r\n                            <Col xs={8}>\r\n                              <p className=\"no-margin title-dish text-capitalize\">\r\n                                {plato.nombre}\r\n                              </p>\r\n                              <p className=\"dish-description \">\r\n                                {plato.descripcion}\r\n                              </p>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      ))}\r\n                    </MenuContent>\r\n\r\n                    <div\r\n                      style={{ marginTop: 10 }}\r\n                      className=\"d-flex w-100 justify-content-between align-items-center\"\r\n                    >\r\n                      <SecondaryBtn onClick={() => selectItem(data)}>\r\n                        Agregar\r\n                      </SecondaryBtn>\r\n                      <h4>$ {data.precio}</h4>\r\n                    </div>\r\n                  </ItemCard>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        <div>\r\n          <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>Pedido</ModalHeader>\r\n            <ModalBody>\r\n              {userSelected.map((plato) => (\r\n                <Col key={plato._id} style={{ marginBlock: \"5px\" }} xs={12}>\r\n                  <div className=\"d-flex w-100 justify-content-between align-items-center\">\r\n                    <h6 className=\"text-capitalize\">{plato.nombre}</h6>\r\n                    <h6>{plato.cantidad}</h6>\r\n                    <h5>$ {plato.total}</h5>\r\n                  </div>\r\n                </Col>\r\n              ))}\r\n              <div className=\"d-flex w-100 justify-content-between align-items-center\">\r\n                <h6>Total:</h6>\r\n                <h5>$ {total}</h5>\r\n              </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <PrimaryBtn\r\n                color=\"primary\"\r\n                disabled={userSelected.length === 0 ? true : false}\r\n                onClick={submit_order}\r\n              >\r\n                Ordenar\r\n              </PrimaryBtn>{\" \"}\r\n              <SecondaryBtn color=\"secondary\" onClick={toggle}>\r\n                Cancelar\r\n              </SecondaryBtn>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst SelectedItems = ({ data, deleteItem }) => {\r\n  return (\r\n    <RowResponsive className={\"scroll\"}>\r\n      {data.map((plato) => (\r\n        <Col key={plato._id} style={{ marginBlock: \"5px\" }} xs={12}>\r\n          <ItemCard>\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <h5 className=\"text-capitalize\">{plato.nombre}</h5>\r\n\r\n              {/* <h4>{plato.cantidad}</h4>\r\n              <h4>$ {plato.total}</h4> */}\r\n              <MdDelete\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => deleteItem(plato._id)}\r\n                size={30}\r\n              />\r\n            </div>\r\n            <p className=\"no-margin order-info\">\r\n              <span>Cantidad: </span>\r\n              {plato.cantidad}\r\n            </p>\r\n            <p className=\"no-margin order-info\">\r\n              <span>Total: </span>${plato.total}\r\n            </p>\r\n          </ItemCard>\r\n        </Col>\r\n      ))}\r\n    </RowResponsive>\r\n  );\r\n};\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\chef\\layout.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\order\\orders.jsx",["325","326"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { SecondaryBtn } from \"../../../components/Buttons/Buttons\";\r\nimport { ItemCard } from \"../../../components/cards/Cards\";\r\nimport { MenuContent } from \"../dishes/styles\";\r\nimport Api from \"../../../utils/ClientApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { states } from \"../../../utils/states\";\r\nimport noimg from \"../../../images/no-img.png\";\r\nimport { Context } from \"../../../context/SocketContext\";\r\nexport default function Orders() {\r\n  const [pedido, setPedido] = useState([]);\r\n  const selector = useSelector((state) => state.orderReducer);\r\n  const history = useHistory();\r\n  const [allData, setAllData] = useState({});\r\n  const [orderReady, setOrderready] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const { socket } = useContext(Context);\r\n  const goTooBack = () => history.push(\"/dashboard\");\r\n\r\n  const getData = () => {\r\n    Api.get(`/api/pedido/reserva/${selector.reserve}`)\r\n      .then((e) => {\r\n        let order = e.data.data;\r\n        if (order.length > 0) {\r\n          setPedido(order[order.length - 1].pedidos);\r\n          setAllData(order[order.length - 1]);\r\n          if (order[order.length - 1].reserva.estado === states.preparado) {\r\n            setOrderready(true);\r\n          }\r\n        }\r\n        console.log(order);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        goTooBack();\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    socket.on(\"cocinero-mesero\", (data) => {\r\n      getData();\r\n    });\r\n  }, [allData]);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      getData();\r\n    }\r\n  }, [loading]);\r\n\r\n  if (loading) {\r\n    return <>sas</>;\r\n  } else {\r\n    return (\r\n      <>\r\n        <Row>\r\n          {orderReady ? (\r\n            <Col>\r\n              <h3 className=\"text-center\">Tu orden esta ya esta Lista!</h3>\r\n            </Col>\r\n          ) : (\r\n            <Col>\r\n              <h3 className=\"text-center\">Tu orden esta en Proceso</h3>\r\n              <small className=\"text-center\">\r\n                Estamos llevando tu pedido al a mesa\r\n              </small>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h4 className=\"text-center\">Tu Orden </h4>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12} sm={12}>\r\n            <Row>\r\n              {pedido.map((data) => (\r\n                <Col\r\n                  style={{ marginBlock: \"5px\" }}\r\n                  key={data._id}\r\n                  xs={12}\r\n                  sm={12}\r\n                  md={6}\r\n                >\r\n                  <ItemCard>\r\n                    <div className=\"d-flex w-100 justify-content-between align-items-center\">\r\n                      <h5>\r\n                        {data.cantidad} {data?.menu?.nombre ?? \"\"}\r\n                      </h5>\r\n                      <small>${data?.menu?.precio ?? \"EE\"} c/u</small>\r\n                    </div>\r\n                    {data.menu && (\r\n                      <MenuContent className={\"scroll\"}>\r\n                        {data.menu.platos.map((plato) => (\r\n                          <Col key={plato._id} sm={12}>\r\n                            <Row>\r\n                              <Col xs={3} className=\"\">\r\n                                <img\r\n                                  src={\r\n                                    plato.imagen\r\n                                      ? process.env.REACT_APP_HOST_URL +\r\n                                        plato.imagen\r\n                                      : noimg\r\n                                  }\r\n                                  className=\"img-dish\"\r\n                                  alt=\"\"\r\n                                />\r\n                              </Col>\r\n                              <Col xs={8}>\r\n                                <p className=\"no-margin title-dish text-capitalize\">\r\n                                  {plato.nombre}\r\n                                </p>\r\n                                <p className=\"dish-description \">\r\n                                  {plato.descripcion}\r\n                                </p>\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n                        ))}\r\n                      </MenuContent>\r\n                    )}\r\n\r\n                    <div className=\"d-flex w-100 justify-content-between align-items-center\">\r\n                      <h4>\r\n                        $ {data.menu?.precio ?? \"Menú Borrado\" * data.cantidad}\r\n                      </h4>\r\n                    </div>\r\n                  </ItemCard>\r\n                </Col>\r\n              ))}\r\n              {pedido.length > 0 ? (\r\n                <Col style={{ marginBlock: \"5px\" }} xs={12}>\r\n                  <ItemCard>\r\n                    <div className=\"d-flex w-100 justify-content-between align-items-center\">\r\n                      <h4>Total</h4>\r\n                    </div>\r\n                    <div className=\"d-flex w-100 justify-content-between align-items-center\">\r\n                      <h3>$ {allData.total} </h3>\r\n                    </div>\r\n                  </ItemCard>\r\n                </Col>\r\n              ) : (\r\n                <ItemCard>\r\n                  <div className=\"d-flex w-100 justify-content-between align-items-center\">\r\n                    <h4>Todavia no tienes un pedido</h4>\r\n                  </div>\r\n                  <div className=\"d-flex w-100 justify-content-between align-items-center\">\r\n                    <SecondaryBtn onClick={() => history.goBack()}>\r\n                      Continuar\r\n                    </SecondaryBtn>\r\n                  </div>\r\n                </ItemCard>\r\n              )}\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\charge\\charge.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\admin\\adminLayout.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\tables\\tables.jsx",["327","328"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { BtnCard, SimpleCard } from \"../../../components/cards/Cards\";\r\nimport { PrimaryBtn, SecondaryBtn } from \"../../../components/Buttons/Buttons\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { CenterText, H2 } from \"./style\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Api from \"../../../utils/ClientApi\";\r\nimport { getUserData } from \"../../../utils/tokenFunctions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { OrderActions } from \"../../../redux/actions\";\r\nimport Loading from \"../../../components/animations/loading\";\r\nimport { states } from \"../../../utils/states\";\r\nimport QrReader from \"react-qr-reader\";\r\nexport default function Tables() {\r\n  const router = useHistory();\r\n  const [tables, setTables] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const userData = getUserData();\r\n  const dispatch = useDispatch();\r\n  const [reserved, setReserved] = useState(false);\r\n  const [result, setResult] = useState(null);\r\n  const [activeCamera, setActiveCamera] = useState(false);\r\n  const [cameraMode, setCameraMode] = useState(false);\r\n  // const qrReader = useRef(null);\r\n  // const refPrint=()=>{\r\n  //     console.log(qrReader.current)\r\n  // }\r\n  const getTable = (id, num) => {\r\n    setLoading(true);\r\n    Api.put(`/api/mesa/${id}`, { estado: false })\r\n      .then((e) => {\r\n        Api.post(\"/api/reserva\", {\r\n          mesa: id,\r\n          usuario: userData.id,\r\n        }).then((response) => {\r\n          dispatch({\r\n            type: OrderActions.GET_TABLE,\r\n            payload: { num: num, reserve: response.data.id },\r\n          });\r\n          router.push(\"/dashboard/dishes\");\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        setError(true);\r\n      });\r\n  };\r\n  const handleScan = (data) => {\r\n    if (data) {\r\n      console.log(data);\r\n      try {\r\n        const tableQr = JSON.parse(data);\r\n        let getTable = tables.find((e) => e._id === tableQr._id);\r\n        setResult(getTable);\r\n        handleActiveCamera();\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  const handleError = (err) => {\r\n    console.error(\"error\", err);\r\n  };\r\n  const handleActiveCamera = () => {\r\n    setActiveCamera(!activeCamera);\r\n  };\r\n  const changeCamera = () => {\r\n    setCameraMode(!cameraMode);\r\n  };\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    Api.get(\"/api/mesa\")\r\n      .then((e) => {\r\n        setTables(e.data.data);\r\n        setError(false);\r\n        Api.get(`/api/reserva/usuario/${userData.id}`).then((response) => {\r\n          let userReserves = response.data.data;\r\n          if (userReserves.length > 0) {\r\n            let lastReserveState = userReserves[userReserves.length - 1];\r\n            if (lastReserveState.estado !== states.finalizado) {\r\n              setReserved(true);\r\n              dispatch({\r\n                type: OrderActions.GET_TABLE,\r\n                payload: {\r\n                  num: lastReserveState.mesa.numero,\r\n                  reserve: lastReserveState._id,\r\n                },\r\n              });\r\n            }\r\n          }\r\n          setLoading(false);\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        setError(true);\r\n      });\r\n  }, [error]);\r\n  if (reserved) {\r\n    return (\r\n      <Row>\r\n        <Col style={{ height: 300 }}>\r\n          <BtnCard onClick={() => router.push(\"/dashboard/dishes\")}>\r\n            <CenterText>\r\n              <H2> Ya tienes reservado una Mesa</H2>\r\n              <H2>Continuar</H2>\r\n            </CenterText>\r\n          </BtnCard>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n  if (loading) {\r\n    return <Loading />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        {activeCamera ? (\r\n          <div className=\"center-container\">\r\n            <div style={{ display: \"grid\", marginBottom: 10 }}>\r\n              <QrReader\r\n                facingMode={!cameraMode ? \"environment\" : \"user\"}\r\n                // constraints={{facingMode: 'rear'}}\r\n                // choosedeviceid={choosedevice}\r\n                delay={1000}\r\n                style={{ height: 300, width: 300 }}\r\n                onError={(e) => handleError(e)}\r\n                onScan={(e) => handleScan(e)}\r\n              />\r\n              <Button outline onClick={changeCamera} color=\"secondary\">\r\n                Cambiar cámara\r\n              </Button>\r\n              {/* <Button outline onClick={refPrint} color=\"secondary\">ref</Button> */}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {/* <p>{result}</p> */}\r\n\r\n        {result ? (\r\n          <Row>\r\n            <Col\r\n              md={6}\r\n              xs={12}\r\n              lg={4}\r\n              style={{ height: \"300px\", marginBottom: 15 }}\r\n            >\r\n              <SimpleCard>\r\n                {/* <CenterText> */}\r\n                {result.estado ? (\r\n                  <>\r\n                    <H2>Mesa {result.numero}</H2>\r\n                    <PrimaryBtn\r\n                      disabled={!result.estado}\r\n                      onClick={() => getTable(result._id, result.numero)}\r\n                    >\r\n                      Elegir Mesa\r\n                    </PrimaryBtn>\r\n                    {\"   \"}\r\n                    <SecondaryBtn onClick={handleActiveCamera}>\r\n                      {!activeCamera ? \"Elegir otra\" : \"Apagar camara\"}\r\n                    </SecondaryBtn>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <H2>Mesa {result.numero}</H2>\r\n                    <H2>Esta mesa esta Ocupada </H2>\r\n                    <SecondaryBtn onClick={handleActiveCamera}>\r\n                      {!activeCamera ? \"Elegir otra\" : \"Apagar camara\"}\r\n                    </SecondaryBtn>\r\n                  </>\r\n                )}\r\n\r\n                {/* </CenterText> */}\r\n              </SimpleCard>\r\n            </Col>\r\n          </Row>\r\n        ) : null}\r\n        {!result ? (\r\n          <BtnCard onClick={handleActiveCamera} style={{ marginTop: 20 }}>\r\n            {activeCamera ? \"Apagar cámara\" : \"Escanear código Qr\"}\r\n          </BtnCard>\r\n        ) : null}\r\n\r\n        {/* <Row style={{paddingBlock: '20px'}}>\r\n                    <Col>\r\n                        <h1>Elige un lugar para empezar... </h1>\r\n                    </Col>\r\n                </Row> */}\r\n        {/* <Row>\r\n                    {tables.map(table=>(\r\n                        <Col key={table._id}  md={6} xs={12} lg={4} style={{height: '300px', marginBottom: 15}}>\r\n                            <BtnCard disabled={!table.estado} onClick={()=>getTable(table._id, table.numero)}>\r\n                                <CenterText>\r\n                                    {table.estado?(\r\n                                        <H2>Mesa {table.numero}</H2>\r\n                                    ):(\r\n                                        <>\r\n                                            <H2>Mesa {table.numero}</H2>\r\n                                            <H2>ocupado</H2>\r\n                                        </>\r\n                                    )}\r\n                                    \r\n                                </CenterText>\r\n                            </BtnCard>\r\n                        </Col>\r\n                    ))}\r\n                </Row> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\daily\\daily.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\tables\\tables.jsx",["329"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  CardTitle,\r\n  CardText,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { ItemCard } from \"../../../components/cards/Cards\";\r\nimport { SecondaryBtn, PrimaryBtn } from \"../../../components/Buttons/Buttons\";\r\nimport Loading from \"../../../components/animations/loading\";\r\nimport Api from \"../../../utils/ClientApi\";\r\nimport { Context } from \"../../../context/SocketContext\";\r\n\r\nexport default function Tables() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [orders, setOrders] = useState([]);\r\n  const [deliveData, setDeliveData] = useState(null);\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const { socket } = useContext(Context);\r\n\r\n  const deliver = (data) => {\r\n    setDeliveData(data);\r\n    setModal(true);\r\n  };\r\n\r\n  const submit = () => {\r\n    console.log(\"uwu\");\r\n    Api.put(`/api/reserva/${deliveData?.reserva?._id}`, { estado: \"entregado\" })\r\n      .then((e) => {\r\n        setModal(false);\r\n        setLoading(true);\r\n      })\r\n      .catch(() => {\r\n        setModal(false);\r\n      });\r\n  };\r\n  const getOrders = () => {\r\n    Api.get(\"/api/pedido\").then((e) => {\r\n      let data = e.data.data.filter((e) => e.reserva.estado === \"preparado\");\r\n      setOrders(data);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrders();\r\n  }, [loading]);\r\n  useEffect(() => {\r\n    socket.on(\"cocinero-mesero\", (data) => {\r\n      getOrders();\r\n    });\r\n  }, [orders]);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row style={{ marginTop: \"15px\" }}>\r\n        {orders.map((order) => (\r\n          <Col key={order._id} md={4} style={{ height: \"300px\" }}>\r\n            <ItemCard>\r\n              <div style={{ padding: \"20px\" }}>\r\n                <CardTitle tag=\"h5\">Mesa {order.reserva.mesa.numero}</CardTitle>\r\n\r\n                <CardText className=\"scroll\" style={{ height: 70 }}>\r\n                  {order.pedidos.map((dishes) => (\r\n                    <li key={dishes._id}>\r\n                      <b>{dishes.cantidad}</b> {dishes.menu.nombre}\r\n                    </li>\r\n                  ))}\r\n                </CardText>\r\n                {/* <CardText>Hora de pedido: <b>{order.reserva.fecha}</b></CardText> */}\r\n              </div>\r\n              <SecondaryBtn onClick={() => deliver(order)}>\r\n                Entregar\r\n              </SecondaryBtn>\r\n            </ItemCard>\r\n          </Col>\r\n        ))}\r\n        {!orders.length > 0 ? (\r\n          <Col>\r\n            <h1>Sin mesas por despachar </h1>\r\n          </Col>\r\n        ) : null}\r\n        <DeliverModal\r\n          submit={submit}\r\n          data={deliveData}\r\n          modal={modal}\r\n          toggle={toggle}\r\n        />\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nconst DeliverModal = ({ submit, data, modal, toggle }) => (\r\n  <Modal isOpen={modal} toggle={toggle}>\r\n    <ModalHeader toggle={toggle}>\r\n      {\" \"}\r\n      Mesa {data?.reserva?.mesa?.numero}\r\n    </ModalHeader>\r\n    <ModalBody>\r\n      <ItemCard>\r\n        <CardText>Entregar plato a mesa ?</CardText>\r\n      </ItemCard>\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      <PrimaryBtn onClick={submit}>Entregar</PrimaryBtn>\r\n      <SecondaryBtn onClick={toggle}>Cancelar</SecondaryBtn>\r\n    </ModalFooter>\r\n  </Modal>\r\n);\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\chef\\dishes\\dishes.jsx",["330"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  CardTitle,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { SecondaryBtn, PrimaryBtn } from \"../../../components/Buttons/Buttons\";\r\nimport { ItemCard } from \"../../../components/cards/Cards\";\r\nimport Api from \"../../../utils/ClientApi\";\r\nimport Loading from \"../../../components/animations/loading\";\r\nimport { Context } from \"../../../context/SocketContext\";\r\n\r\nexport default function Dishes() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [menus, setMenus] = useState([]);\r\n  const [orders, setOrders] = useState([]);\r\n  const [prepareDish, setPrepareDish] = useState(null);\r\n  const { socket } = useContext(Context);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const submit = () => {\r\n    Api.put(`/api/reserva/${prepareDish.reserva._id}`, {\r\n      estado: \"preparado\",\r\n    }).then(() => {\r\n      setPrepareDish(null);\r\n      setLoading(true);\r\n      socket.emit(\"cocinero-mesero\");\r\n    });\r\n  };\r\n  const getPdidos = () => {\r\n    Api.get(\"/api/pedido\").then((e) => {\r\n      let data = e.data.data.filter(\r\n        (order) => order.reserva.estado === \"pedido\"\r\n      );\r\n      console.log(e);\r\n      let currentDish = data[0];\r\n      setLoading(false);\r\n      setOrders(data);\r\n      setPrepareDish(currentDish);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (loading) {\r\n      getPdidos();\r\n    }\r\n  }, [loading]);\r\n  useEffect(() => {\r\n    Api.get(\"/api/menu\").then((e) => {\r\n      setMenus(e.data.data);\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    socket.on(\"cliente-cocinero\", (data) => {\r\n      getPdidos();\r\n    });\r\n  }, [orders]);\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row style={{ marginTop: \"10px\" }}>\r\n        <Col xs={12} lg={8}>\r\n          <ItemCard\r\n            className=\"d-flex justify-content-center align-items-center scroll\"\r\n            style={{ height: \"80vh\", overflowY: \"auto\" }}\r\n          >\r\n            {prepareDish ? (\r\n              <div style={{ padding: \"20px\" }}>\r\n                <CardTitle tag=\"h5\">\r\n                  Mesa {prepareDish.reserva.mesa.numero}\r\n                </CardTitle>\r\n                <div>\r\n                  <ul className=\"list-group\">\r\n                    {prepareDish.pedidos.map((e) => (\r\n                      <li\r\n                        key={e._id}\r\n                        className=\"list-group-item\"\r\n                        style={{ backgroundColor: \"#fff0\" }}\r\n                      >\r\n                        <div className=\"d-flex justify-content-between\">\r\n                          <b>{e.cantidad}</b>\r\n                          <div>{e.menu.nombre}</div>\r\n                        </div>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n                {/* <CardText>Tiempo de espera: <b>00:05</b></CardText> */}\r\n                <SecondaryBtn\r\n                  style={{ fontSize: \"30px\", width: \"100%\" }}\r\n                  onClick={submit}\r\n                >\r\n                  Plato preparado\r\n                </SecondaryBtn>\r\n              </div>\r\n            ) : (\r\n              <h1>No hay platos por preparar</h1>\r\n            )}\r\n          </ItemCard>\r\n        </Col>\r\n        <Col xs={12} lg={4}>\r\n          <ItemCard\r\n            className=\"scroll\"\r\n            style={{ height: \"80vh\", overflow: \"hidden\", overflowY: \"auto\" }}\r\n          >\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h5>Numero de platos pedidos</h5>\r\n              <SecondaryBtn onClick={() => setModalVisible(!modalVisible)}>\r\n                Ver Menú\r\n              </SecondaryBtn>\r\n            </div>\r\n            <ul className=\"list-group\">\r\n              {orders.map((order) => (\r\n                <div key={order._id}>\r\n                  <p> mesa {order.reserva.mesa.numero}</p>\r\n                  {order.pedidos.map((pedido) => (\r\n                    <li key={pedido._id} className=\"list-group-item\">\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <div>{pedido.menu.nombre}</div>\r\n                        <div>\r\n                          <b>{pedido.cantidad}</b>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n            </ul>\r\n          </ItemCard>\r\n        </Col>\r\n      </Row>\r\n      <div>\r\n        <Modal\r\n          centered\r\n          scrollable\r\n          isOpen={modalVisible}\r\n          toggle={() => setModalVisible(!modalVisible)}\r\n        >\r\n          <ModalHeader toggle={() => setModalVisible(!modalVisible)}>\r\n            Menú\r\n          </ModalHeader>\r\n          <ModalBody className=\"scroll\">\r\n            <Row style={{ marginTop: \"10px\" }}>\r\n              {menus.map((data) => (\r\n                <Col key={data._id} xs={12} style={{ marginBlock: 10 }}>\r\n                  <ItemCard>\r\n                    <CardTitle tag=\"h6\">{data.nombre}</CardTitle>\r\n                    <div>\r\n                      <ul className=\"list-group\">\r\n                        {data.platos.map((plato) => (\r\n                          <li\r\n                            key={plato._id}\r\n                            className=\"list-group-item\"\r\n                            style={{ backgroundColor: \"#fff0\" }}\r\n                          >\r\n                            {plato.nombre}\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  </ItemCard>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <PrimaryBtn\r\n              color=\"primary\"\r\n              onClick={() => setModalVisible(!modalVisible)}\r\n            >\r\n              Aceptar\r\n            </PrimaryBtn>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\Buttons\\style.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\cards\\style.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\animations\\styles.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\tables\\style.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\api_request.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\client\\dishes\\styles.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\waiters\\charge\\api_request.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\utils\\states.js",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\tables\\viewTables.jsx",["331"],"import React, { useEffect, useState } from \"react\";\r\nimport { PrimaryBtn } from \"./../../../components/Buttons/Buttons\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport QRCode from \"qrcode.react\";\r\nimport Api from \"../../../utils/ClientApi\";\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n} from \"reactstrap\";\r\nexport default function ViewTables() {\r\n  const data = useLocation();\r\n  const history = useHistory();\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    if (loading) {\r\n      if (data.state) {\r\n        Api.get(\"/api/reserva\").then((e) => {\r\n          const user = e.data.data\r\n            .filter(\r\n              (a) => a.estado !== \"finalizado\" && a.mesa._id === data.state._id\r\n            )\r\n            .map((i) => i.usuario);\r\n          if (user[0]) setName(user[0].nombre);\r\n\r\n          setLoading(false);\r\n        });\r\n      }\r\n    }\r\n  }, [loading]);\r\n  if (!loading) {\r\n    if (data.state) {\r\n      const { numero, estado } = data.state;\r\n      return (\r\n        <div className=\"center-container\">\r\n          <Card>\r\n            <div style={{ marginTop: 20 }} className=\"center-container\">\r\n              <QRCode\r\n                size={400}\r\n                imageSettings={{\r\n                  src: `https://via.placeholder.com/150/FFFFFF/000000?text=M${numero}`,\r\n                  height: 50,\r\n                  width: 50,\r\n                }}\r\n                value={JSON.stringify(data.state)}\r\n              />\r\n            </div>\r\n            <CardBody>\r\n              <CardTitle tag=\"h5\">Mesa N: {numero}</CardTitle>\r\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n                {estado ? \"Disponible\" : \"Ocupado\"}{\" \"}\r\n                {!estado && (\r\n                  <>\r\n                    por\r\n                    <p className=\"no-margin text-capitalize\"> {name}</p>\r\n                  </>\r\n                )}\r\n              </CardSubtitle>\r\n              <CardText>\r\n                Este código Qr contiene la información de la mesa que permite al\r\n                cliente tomar la mesa para su pedido\r\n              </CardText>\r\n              <Button onClick={() => history.goBack()}>Volver</Button>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"center-container\">\r\n        <PrimaryBtn onClick={() => history.goBack()}>\r\n          Seleciona una mesa\r\n        </PrimaryBtn>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>Cargando...</div>;\r\n  }\r\n}\r\n","E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\dihesForm.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\public_home\\public.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\cards\\simpleCard.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\layout\\footer\\footer.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\public_home\\Schedule.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\views\\admin\\addMenu\\addImage.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\components\\alert\\Alert.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\context\\SocketContext.jsx",[],"E:\\trabajos\\otra tesis\\restaurant-tesis\\src\\context\\useSocket.jsx",[],{"ruleId":"332","replacedBy":"333"},{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","severity":1,"message":"337","line":22,"column":11,"nodeType":"338","messageId":"339","endLine":22,"endColumn":26},{"ruleId":"340","severity":1,"message":"341","line":60,"column":6,"nodeType":"342","endLine":60,"endColumn":8,"suggestions":"343"},{"ruleId":"344","severity":1,"message":"345","line":82,"column":58,"nodeType":"346","messageId":"347","endLine":82,"endColumn":60},{"ruleId":"340","severity":1,"message":"341","line":119,"column":6,"nodeType":"342","endLine":119,"endColumn":15,"suggestions":"348"},{"ruleId":"340","severity":1,"message":"341","line":44,"column":6,"nodeType":"342","endLine":44,"endColumn":8,"suggestions":"349"},{"ruleId":"350","severity":1,"message":"351","line":6,"column":3,"nodeType":"352","messageId":"353","endLine":6,"endColumn":9},{"ruleId":"340","severity":1,"message":"354","line":44,"column":6,"nodeType":"342","endLine":44,"endColumn":15,"suggestions":"355"},{"ruleId":"340","severity":1,"message":"356","line":50,"column":6,"nodeType":"342","endLine":50,"endColumn":15,"suggestions":"357"},{"ruleId":"350","severity":1,"message":"358","line":1,"column":38,"nodeType":"352","messageId":"353","endLine":1,"endColumn":44},{"ruleId":"340","severity":1,"message":"359","line":97,"column":6,"nodeType":"342","endLine":97,"endColumn":13,"suggestions":"360"},{"ruleId":"340","severity":1,"message":"361","line":57,"column":6,"nodeType":"342","endLine":57,"endColumn":14,"suggestions":"362"},{"ruleId":"340","severity":1,"message":"361","line":59,"column":6,"nodeType":"342","endLine":59,"endColumn":14,"suggestions":"363"},{"ruleId":"340","severity":1,"message":"364","line":34,"column":6,"nodeType":"342","endLine":34,"endColumn":15,"suggestions":"365"},"no-native-reassign",["366"],"no-negated-in-lhs",["367"],"react/jsx-pascal-case","Imported JSX component Public_home must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history.location.state'. Either include it or remove the dependency array.","ArrayExpression",["368"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["369"],["370"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getData' and 'socket'. Either include them or remove the dependency array.",["371"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["372"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userData.id'. Either include them or remove the dependency array.",["373"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["374"],["375"],"React Hook useEffect has a missing dependency: 'data.state'. Either include it or remove the dependency array.",["376"],"no-global-assign","no-unsafe-negation",{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"377","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"388","fix":"390"},{"desc":"391","fix":"392"},"Update the dependencies array to be: [history.location.state]",{"range":"393","text":"394"},"Update the dependencies array to be: [history.location.state, loading]",{"range":"395","text":"396"},{"range":"397","text":"394"},"Update the dependencies array to be: [allData, getData, socket]",{"range":"398","text":"399"},"Update the dependencies array to be: [getData, loading]",{"range":"400","text":"401"},"Update the dependencies array to be: [dispatch, error, userData.id]",{"range":"402","text":"403"},"Update the dependencies array to be: [orders, socket]",{"range":"404","text":"405"},{"range":"406","text":"405"},"Update the dependencies array to be: [data.state, loading]",{"range":"407","text":"408"},[1955,1957],"[history.location.state]",[3626,3635],"[history.location.state, loading]",[1623,1625],[1646,1655],"[allData, getData, socket]",[1732,1741],"[getData, loading]",[3289,3296],"[dispatch, error, userData.id]",[1570,1578],"[orders, socket]",[1698,1706],[986,995],"[data.state, loading]"]